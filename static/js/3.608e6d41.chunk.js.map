{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","components/Pages/About.styles.ts","components/Pages/About.tsx"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","makeStyles","theme","createStyles","aboutPageCard","marginRight","spacing","aboutPageContent","aboutPageBlock","lineHeight","letterSpacing","wordSpacing","TITLE","About","useStyles","title","ABOUT","Icon","Typography","variant","paragraph","bio","data","map","value","key"],"mappings":"8HAAA,uDAaIA,EAAoBC,cAAiB,SAAcC,EAAOC,GAC5D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoBD,gBAAoBS,IAAOC,YAAS,CACtDN,UAAWO,YAAKR,EAAQS,KAAMR,GAC9BS,UAAWP,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OA6BUO,gBA9CK,CAElBF,KAAM,CACJG,SAAU,WA2CoB,CAChCC,KAAM,WADOF,CAEZf,I,iCCvDH,8CAeIkB,EAA2BjB,cAAiB,SAAqBC,EAAOC,GAC1E,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBc,EAAmBjB,EAAMkB,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDX,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBD,gBAAoBoB,EAAWV,YAAS,CAC1DN,UAAWO,YAAKR,EAAQS,KAAMR,GAC9BF,IAAKA,GACJK,OAgCUO,gBAnDK,CAElBF,KAAM,CACJS,QAAS,GACT,eAAgB,CACdC,cAAe,MA8Ca,CAChCN,KAAM,kBADOF,CAEZG,I,8ICzDYM,eAAW,SAACC,GAAD,OACxBC,YAAa,CACXC,cAAe,CACbC,YAAaH,EAAMI,QAAQ,IAE7BC,iBAAkB,CAChBR,QAASG,EAAMI,QAAQ,IAEzBE,eAAgB,CACdC,WAAY,OACZC,cAAe,MACfC,YAAa,Y,wBCJNC,EAAQ,cAyBNC,UApBG,WAChB,IAAMhC,EAAUiC,IAChB,OACE,kBAAC,gBAAD,CAAeC,MAAOC,IAAMtB,KAAMuB,KAAMD,IAAMC,MAC5C,kBAACxC,EAAA,EAAD,CAAMK,UAAWD,EAAQuB,cAAepB,QAAM,GAC5C,kBAACW,EAAA,EAAD,CAAab,UAAWD,EAAQ0B,kBAC9B,kBAACW,EAAA,EAAD,CAAYC,QAAQ,KAAKC,WAAS,GAC/BR,GAEFS,IAAIC,KAAKC,KAAI,SAACC,EAAeC,GAAhB,OACZ,kBAACP,EAAA,EAAD,CAAYO,IAAKA,EAAK3C,UAAWD,EAAQ2B,eAAgBY,WAAS,EAACD,QAAQ,MACxEK","file":"static/js/3.608e6d41.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    aboutPageCard: {\n      marginRight: theme.spacing(2),\n    },\n    aboutPageContent: {\n      padding: theme.spacing(2),\n    },\n    aboutPageBlock: {\n      lineHeight: '24px',\n      letterSpacing: '1px',\n      wordSpacing: '1px',\n    },\n  })\n);\n","import Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { bio } from 'assets';\nimport { PageContainer } from 'components/Pages';\nimport useStyles from 'components/Pages/About.styles';\nimport { ABOUT } from 'const';\nimport React, { FC } from 'react';\n\nexport const TITLE = 'Artem Ganev';\n\n/**\n * About page component\n */\nconst About: FC = () => {\n  const classes = useStyles();\n  return (\n    <PageContainer title={ABOUT.name} Icon={ABOUT.Icon}>\n      <Card className={classes.aboutPageCard} raised>\n        <CardContent className={classes.aboutPageContent}>\n          <Typography variant='h4' paragraph>\n            {TITLE}\n          </Typography>\n          {bio.data.map((value: string, key: number) => (\n            <Typography key={key} className={classes.aboutPageBlock} paragraph variant='h6'>\n              {value}\n            </Typography>\n          ))}\n        </CardContent>\n      </Card>\n    </PageContainer>\n  );\n};\n\nexport default About;\n"],"sourceRoot":""}