{"version":3,"sources":["components/Pages/Contacts.styles.ts","components/Pages/Contacts.tsx"],"names":["makeStyles","createStyles","contactsContainer","lineHeight","letterSpacing","wordSpacing","Contacts","classes","useStyles","narrow","useIsNarrow","centerTitle","title","CONTACTS","name","Icon","Box","className","padding","justifyContent","contacts","data","map","key","link","value","Typography","variant","alignItems","display","p","href","target","BLANK","rel","REL","renderItems"],"mappings":"4LAEeA,eAAW,kBACxBC,YAAa,CACXC,kBAAmB,CACjBC,WAAY,OACZC,cAAe,MACfC,YAAa,Y,gCC6CJC,UAVM,WACnB,IAAMC,EAAUC,IACVC,EAASC,cACf,OACE,kBAAC,gBAAD,CAAeC,aAAW,EAACC,MAAOC,IAASC,KAAMC,KAAMF,IAASE,MAC9D,kBAACC,EAAA,EAAD,CAAKC,UAAWV,EAAQL,mBAzBV,SAACO,GACnB,IAAMS,EAAUT,EAAS,EAAI,EACvBU,EAAiBV,EAAS,gBAAkB,SAClD,OAAOW,IAASC,KAAKC,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,KAAMZ,EAAd,EAAcA,MAAOa,EAArB,EAAqBA,MAArB,OACvB,kBAACC,EAAA,EAAD,CAAYH,IAAKA,EAAKI,QAAQ,MAC5B,kBAACX,EAAA,EAAD,CAAKY,WAAW,WAAWC,QAAQ,OAAOV,eAAgBA,GACxD,kBAACH,EAAA,EAAD,CAAKc,EAAGZ,GAAUO,EAAlB,SACA,kBAACT,EAAA,EAAD,CAAKc,EAAGZ,GACN,uBAAGa,KAAMP,EAAMQ,OAAQC,IAAOC,IAAKC,KAChCvB,SAgBqCwB,CAAY3B","file":"static/js/7.09c9f5f4.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() =>\n  createStyles({\n    contactsContainer: {\n      lineHeight: '24px',\n      letterSpacing: '1px',\n      wordSpacing: '1px',\n    },\n  })\n);\n","import Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { contacts } from 'assets';\nimport { PageContainer } from 'components/Pages';\nimport useStyles from 'components/Pages/Contacts.styles';\nimport { BLANK, CONTACTS, REL } from 'const';\nimport React, { FC } from 'react';\nimport { useIsNarrow } from '../../hooks';\n\n/**\n * Contact options interface\n */\ninterface IContact {\n  key: string;\n  value: string;\n  link: string;\n  title: string;\n}\n\n/**\n * Contacts items markup\n */\nconst renderItems = (narrow: boolean) => {\n  const padding = narrow ? 1 : 2;\n  const justifyContent = narrow ? 'space-between' : 'center';\n  return contacts.data.map(({ key, link, title, value }: IContact) => (\n    <Typography key={key} variant='h6'>\n      <Box alignItems='baseline' display='flex' justifyContent={justifyContent}>\n        <Box p={padding}>{value}:&nbsp;</Box>\n        <Box p={padding}>\n          <a href={link} target={BLANK} rel={REL}>\n            {title}\n          </a>\n        </Box>\n      </Box>\n    </Typography>\n  ));\n};\n\n/**\n * Contacts page component\n */\nconst Contacts: FC = () => {\n  const classes = useStyles();\n  const narrow = useIsNarrow();\n  return (\n    <PageContainer centerTitle title={CONTACTS.name} Icon={CONTACTS.Icon}>\n      <Box className={classes.contactsContainer}>{renderItems(narrow)}</Box>\n    </PageContainer>\n  );\n};\n\nexport default Contacts;\n"],"sourceRoot":""}