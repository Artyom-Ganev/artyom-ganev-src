{"version":3,"sources":["const/api.ts","const/Html.ts","const/Pages.ts","components/Navigation/LoadingIndicator.tsx","components/Navigation/Menu.tsx","components/Navigation/Routes.tsx","components/Layout/Content.tsx","components/Layout/Header.tsx","components/Layout/Footer.tsx","components/App/index.tsx","components/Navigation/Menu.module.scss","container/Page/Container.module.scss","components/Layout/Content.module.scss","container/Page/index.tsx","selectors/app.ts","selectors/blog.ts","selectors/career.ts","components/Navigation/LoadingIndicator.module.scss","components/Layout/Footer.module.scss","actions/app.ts","actions/blog.ts","actions/career.ts","reducers/app.ts","reducers/blog.ts","reducers/career.ts","reducers/index.ts","model/SimpleModel.ts","model/AbstractBuilder.ts","model/BlogBuilder.ts","model/Blog.ts","model/CareerBuilder.ts","model/Career.ts","adapter/blog.ts","api/blog.ts","saga/blog.ts","adapter/career.ts","api/career.ts","saga/career.ts","saga/index.ts","store/index.ts","registerServiceWorker.ts","index.tsx"],"names":["API_PATH","BLANK","REL","PAGES","id","name","url","LoadingIndicator","className","styles","container","Menu","map","exact","item","activeClassName","active","to","key","Main","lazy","About","Blog","Career","Contacts","NotFound","Indicator","Routes","fallback","from","path","component","Content","background","Header","Footer","isNarrow","window","innerWidth","useResize","useState","narrow","setNarrow","useEffect","onResize","addEventListener","removeEventListener","NarrowContext","React","createContext","App","Provider","value","module","exports","Container","children","title","loading","useSelector","isLoading","useContext","contentClass","wide","app","getBlogListItems","blog","items","getCareerListItems","career","APP_LOADING","BLOG_LOAD_LIST","BLOG_LOAD_LIST_SUCCESS","BLOG_LOAD_LIST_ERROR","blogLoadList","type","blogLoadListSuccess","blogLoadListError","error","CAREER_LOAD_LIST","CAREER_LOAD_LIST_SUCCESS","CAREER_LOAD_LIST_ERROR","careerLoadList","careerLoadListSuccess","careerLoadListError","initialState","state","action","detail","combineReducers","SimpleModel","_id","_title","this","AbstractBuilder","BlogBuilder","_date","moment","_link","_linkCaption","date","utc","link","linkCaption","BlogModel","format","CareerBuilder","_description","_endDate","_post","_site","_startDate","_tools","description","endDate","post","site","startDate","tools","CareerModel","isValid","string1","blogModelAdapter","data","create","build","blogListAdapter","loadBlogList","a","axios","get","watchActions","call","loadBlogListApi","response","put","message","console","log","takeEvery","careerModelAdapter","careerListAdapter","loadCareerList","loadCareerListApi","all","blogSaga","careerSaga","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","run","rootSaga","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","store","document","getElementById","URL","process","toString","origin","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8913661f.chunk.js","sourcesContent":["export const API_PATH = 'https://artyom-ganev-node.herokuapp.com/api';\n","export const BLANK = '_blank';\n\nexport const REL = 'noopener noreferrer';\n","export const ABOUT = { id: 'about', name: 'About', url: 'about' };\nexport const BLOG = { id: 'blog', name: 'Blog', url: 'blog' };\nexport const CAREER = { id: 'career', name: 'Career', url: 'career' };\nexport const CONTACTS = { id: 'contacts', name: 'Contacts', url: 'contacts' };\nexport const MAIN = { id: 'main', name: 'Main', url: '' };\n\n/**\n * Pages settings\n */\nexport const PAGES = [MAIN, ABOUT, BLOG, CAREER, CONTACTS];\n","import React, { FunctionComponent } from 'react';\nimport styles from './LoadingIndicator.module.scss';\n\n/**\n * Simple loading indicator based on SVG-image\n */\nconst LoadingIndicator: FunctionComponent = () => (\n  <div className='flexBox flexGrow-1 flexShrink-1 justifyContentCenter'>\n    <div className={styles.container} />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { PAGES } from 'src/const';\nimport styles from './Menu.module.scss';\n\n/**\n * Menu items render function\n */\nconst renderItems = (): ReactNode[] =>\n  PAGES.map(\n    ({ id, name, url }): ReactNode => (\n      <NavLink exact={!url} className={styles.item} activeClassName={styles.active} to={`/${url}`} key={id}>\n        {name}\n      </NavLink>\n    )\n  );\n\n/**\n * /**\n * Navigation menu component\n */\nconst Menu: FunctionComponent = () => (\n  <nav className={`flexBox ${styles.container}`} id='menu'>\n    {renderItems()}\n  </nav>\n);\n\nexport default Menu;\n","import React, { FunctionComponent, lazy, Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { LoadingIndicator } from 'src/components/Navigation';\nimport { PageContainer } from 'src/container';\n\nconst Main = lazy(() => import('src/components/Pages/Main'));\nconst About = lazy(() => import('src/components/Pages/About'));\nconst Blog = lazy(() => import('src/components/Pages/Blog'));\nconst Career = lazy(() => import('src/components/Pages/Career'));\nconst Contacts = lazy(() => import('src/components/Pages/Contacts'));\nconst NotFound = lazy(() => import('src/components/Pages/NotFound'));\n\nconst Indicator: FunctionComponent = () => (\n  <PageContainer>\n    <LoadingIndicator />\n  </PageContainer>\n);\n\n/**\n * Application routes component\n */\nconst Routes: FunctionComponent = () => (\n  <Suspense fallback={<Indicator />}>\n    <Switch>\n      <Redirect from='/main' to='/' />\n      <Route exact={true} path='/' component={Main} />\n      <Route exact={true} path='/about' component={About} />\n      <Route exact={true} path='/blog' component={Blog} />\n      <Route exact={true} path='/career' component={Career} />\n      <Route exact={true} path='/contacts' component={Contacts} />\n      <Route component={NotFound} />\n    </Switch>\n  </Suspense>\n);\n\nexport default Routes;\n","import React, { FunctionComponent } from 'react';\nimport { Routes } from 'src/components/Navigation';\nimport styles from './Content.module.scss';\n\n/**\n * App Content component\n */\nconst Content: FunctionComponent = () => (\n  <>\n    <div className={styles.background} />\n    <div className={`flexBox flexColumn ${styles.container}`}>\n      <Routes />\n    </div>\n  </>\n);\n\nexport default Content;\n","import React, { FunctionComponent } from 'react';\nimport { Menu } from 'src/components/Navigation';\n\n/**\n * Header component\n */\nconst Header: FunctionComponent = () => (\n  <header className='flexBox'>\n    <Menu />\n  </header>\n);\n\nexport default Header;\n","import React, { FunctionComponent } from 'react';\nimport styles from './Footer.module.scss';\n\n/**\n * Footer component\n */\nconst Footer: FunctionComponent = () => (\n  <footer className={styles.container}>\n    <span>© 2019 All rights reserved</span>\n  </footer>\n);\n\nexport default Footer;\n","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { Content, Footer, Header } from 'src/components/Layout';\n\n/**\n * Check if the page is narrow\n */\nconst isNarrow = (): boolean => window.innerWidth <= 800;\n\n/**\n * Resize hook\n */\nconst useResize = (): boolean => {\n  const [narrow, setNarrow] = useState<boolean>(isNarrow());\n  useEffect(() => {\n    const onResize = (): void => setNarrow(isNarrow());\n    window.addEventListener('resize', onResize);\n    return (): void => window.removeEventListener('resize', onResize);\n  });\n  return narrow;\n};\n\nexport const NarrowContext = React.createContext(isNarrow());\n\n/**\n * Main application component\n */\nconst App: FunctionComponent = () => (\n  <HashRouter>\n    <div className='flexBox flexColumn'>\n      <Header />\n      <NarrowContext.Provider value={useResize()}>\n        <Content />\n      </NarrowContext.Provider>\n      <Footer />\n    </div>\n  </HashRouter>\n);\n\nexport default App;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Menu_container__2LEBm\",\"item\":\"Menu_item__2Bzvu\",\"active\":\"Menu_active__1jdPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__TNVcx\",\"wide\":\"Container_wide__3aM1A\",\"narrow\":\"Container_narrow__T0gNU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Content_background__Tyx3y\",\"container\":\"Content_container__CGP1h\"};","import React, { FunctionComponent, PropsWithChildren, useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport { NarrowContext } from 'src/components';\nimport { LoadingIndicator } from 'src/components/Navigation';\nimport { isLoading } from 'src/selectors';\nimport { IState } from 'src/types';\nimport styles from './Container.module.scss';\n\n/**\n * Container properties interface\n */\ninterface IProperties {\n  title?: string;\n}\n\n/**\n * Page container with title\n */\nconst Container: FunctionComponent<PropsWithChildren<IProperties>> = ({\n  children,\n  title,\n}: PropsWithChildren<IProperties>) => {\n  const loading = useSelector<IState, boolean>(isLoading);\n  const narrow = useContext(NarrowContext);\n  const contentClass = `flexBox flexColumn ${styles.container} ${narrow ? styles.narrow : styles.wide}`;\n  return loading ? (\n    <div className={contentClass}>\n      <LoadingIndicator />\n    </div>\n  ) : (\n    <div className={contentClass}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","import { IState } from 'src/types';\n\nexport const isLoading = ({ app }: IState): boolean => app.loading;\n","import { BlogModel } from 'src/model';\nimport { IState } from 'src/types';\n\nexport const getBlogListItems = ({ blog }: IState): BlogModel[] => blog.items;\n","import { CareerModel } from 'src/model';\nimport { IState } from 'src/types';\n\nexport const getCareerListItems = ({ career }: IState): CareerModel[] => career.items;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoadingIndicator_container__16UZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__2RXZy\"};","import { ActionCreator } from 'redux';\nimport { IAppLoadingAction } from 'src/types';\n\nexport const APP_LOADING = 'APP_LOADING';\n\nexport const appLoading: ActionCreator<IAppLoadingAction> = (loading: boolean): IAppLoadingAction => ({\n  type: APP_LOADING,\n  loading,\n});\n","import { ActionCreator, AnyAction } from 'redux';\nimport { BlogModel } from 'src/model';\nimport { IErrorAction, ILoadBlogListSuccessAction } from 'src/types';\n\nexport const BLOG_LOAD_LIST = 'BLOG_LOAD_LIST';\nexport const BLOG_LOAD_LIST_SUCCESS = `${BLOG_LOAD_LIST}_SUCCESS`;\nexport const BLOG_LOAD_LIST_ERROR = `${BLOG_LOAD_LIST}_ERROR`;\n\nexport const blogLoadList: ActionCreator<AnyAction> = (): AnyAction => ({\n  type: BLOG_LOAD_LIST,\n});\n\nexport const blogLoadListSuccess: ActionCreator<ILoadBlogListSuccessAction> = (\n  items: BlogModel[]\n): ILoadBlogListSuccessAction => ({\n  type: BLOG_LOAD_LIST_SUCCESS,\n  items,\n});\n\nexport const blogLoadListError: ActionCreator<IErrorAction> = (error: string): IErrorAction => ({\n  type: BLOG_LOAD_LIST_ERROR,\n  error,\n});\n","import { ActionCreator, AnyAction } from 'redux';\nimport { CareerModel } from 'src/model';\nimport { IErrorAction, ILoadCareerListSuccessAction } from 'src/types';\n\nexport const CAREER_LOAD_LIST = 'CAREER_LOAD_LIST';\nexport const CAREER_LOAD_LIST_SUCCESS = `${CAREER_LOAD_LIST}_SUCCESS`;\nexport const CAREER_LOAD_LIST_ERROR = `${CAREER_LOAD_LIST}_ERROR`;\n\nexport const careerLoadList: ActionCreator<AnyAction> = (): AnyAction => ({\n  type: CAREER_LOAD_LIST,\n});\n\nexport const careerLoadListSuccess: ActionCreator<ILoadCareerListSuccessAction> = (\n  items: CareerModel[]\n): ILoadCareerListSuccessAction => ({\n  type: CAREER_LOAD_LIST_SUCCESS,\n  items,\n});\n\nexport const careerLoadListError: ActionCreator<IErrorAction> = (error: string): IErrorAction => ({\n  type: CAREER_LOAD_LIST_ERROR,\n  error,\n});\n","import {\n  APP_LOADING,\n  BLOG_LOAD_LIST,\n  BLOG_LOAD_LIST_ERROR,\n  BLOG_LOAD_LIST_SUCCESS,\n  CAREER_LOAD_LIST,\n  CAREER_LOAD_LIST_ERROR,\n  CAREER_LOAD_LIST_SUCCESS,\n} from 'src/actions';\nimport { AppActionTypes, IAppLoadingAction, IAppState } from 'src/types';\n\nexport const initialState: IAppState = {\n  loading: false,\n};\n\n/**\n * App state reducer\n */\nconst app = (state: IAppState = initialState, action: AppActionTypes): IAppState => {\n  switch (action.type) {\n    case APP_LOADING: {\n      const { loading } = action as IAppLoadingAction;\n      return { ...state, loading };\n    }\n    case BLOG_LOAD_LIST:\n    case CAREER_LOAD_LIST: {\n      return { ...state, loading: true };\n    }\n    case BLOG_LOAD_LIST_SUCCESS:\n    case BLOG_LOAD_LIST_ERROR:\n    case CAREER_LOAD_LIST_SUCCESS:\n    case CAREER_LOAD_LIST_ERROR: {\n      return { ...state, loading: false };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default app;\n","import { BLOG_LOAD_LIST_ERROR, BLOG_LOAD_LIST_SUCCESS } from 'src/actions';\nimport { BlogActionsType, IBlogState, IErrorAction, ILoadBlogListSuccessAction } from 'src/types';\n\nexport const initialState: IBlogState = {\n  detail: {},\n  error: '',\n  items: [],\n};\n\n/**\n * Blog actions reducer\n */\nconst blog = (state: IBlogState = initialState, action: BlogActionsType): IBlogState => {\n  switch (action.type) {\n    case BLOG_LOAD_LIST_SUCCESS: {\n      const { items } = action as ILoadBlogListSuccessAction;\n      return { ...state, items };\n    }\n    case BLOG_LOAD_LIST_ERROR: {\n      const { error } = action as IErrorAction;\n      return { ...state, error };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default blog;\n","import { CAREER_LOAD_LIST_ERROR, CAREER_LOAD_LIST_SUCCESS } from 'src/actions';\nimport { CareerActionsType, ICareerState, IErrorAction, ILoadCareerListSuccessAction } from 'src/types';\n\nexport const initialState: ICareerState = {\n  detail: {},\n  error: '',\n  items: [],\n};\n\nconst career = (state: ICareerState = initialState, action: CareerActionsType): ICareerState => {\n  switch (action.type) {\n    case CAREER_LOAD_LIST_SUCCESS: {\n      const { items } = action as ILoadCareerListSuccessAction;\n      return { ...state, items };\n    }\n    case CAREER_LOAD_LIST_ERROR: {\n      const { error } = action as IErrorAction;\n      return { ...state, error };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default career;\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport blog from './blog';\nimport career from './career';\n\nexport default combineReducers({ app, blog, career });\n","import { IModel } from 'src/types/IModel';\n\nclass SimpleModel implements IModel {\n  protected _id = '';\n  protected _title = '';\n\n  protected constructor(id: string, title: string) {\n    this._id = id;\n    this._title = title;\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  get title(): string {\n    return this._title;\n  }\n}\n\nexport default SimpleModel;\n","import { SimpleModel } from 'src/model';\n\nabstract class AbstractBuilder<TModel extends SimpleModel> {\n  protected _id = '';\n  protected _title = '';\n\n  id(id: string): AbstractBuilder<TModel> {\n    this._id = id;\n    return this;\n  }\n\n  title(title: string): AbstractBuilder<TModel> {\n    this._title = title;\n    return this;\n  }\n\n  abstract build(): TModel;\n}\n\nexport default AbstractBuilder;\n","import moment, { Moment } from 'moment';\nimport { BlogModel } from 'src/model';\nimport AbstractBuilder from './AbstractBuilder';\n\nclass BlogBuilder extends AbstractBuilder<BlogModel> {\n  private _date: Moment = moment();\n  private _link = '';\n  private _linkCaption = '';\n\n  date(date: string): BlogBuilder {\n    this._date = moment.utc(date, 'YYYY-MM-DD');\n    return this;\n  }\n\n  link(link: string): BlogBuilder {\n    this._link = link;\n    return this;\n  }\n\n  linkCaption(linkCaption: string): BlogBuilder {\n    this._linkCaption = linkCaption;\n    return this;\n  }\n\n  build(): BlogModel {\n    return new BlogModel(this._id, this._title, this._date, this._link, this._linkCaption);\n  }\n}\n\nexport default BlogBuilder;\n","import { Moment } from 'moment';\nimport SimpleModel from 'src/model/SimpleModel';\nimport BlogBuilder from './BlogBuilder';\n\nclass Blog extends SimpleModel {\n  private _date: Moment;\n  private _link: string;\n  private _linkCaption: string;\n\n  constructor(id: string, title: string, date: Moment, link: string, linkCaption: string) {\n    super(id, title);\n    this._date = date;\n    this._link = link;\n    this._linkCaption = linkCaption;\n  }\n\n  get date(): Moment {\n    return this._date;\n  }\n\n  get link(): string {\n    return this._link;\n  }\n\n  get linkCaption(): string {\n    return this._linkCaption;\n  }\n\n  formatDate(): string {\n    return this.date.format('Do MMMM YYYY');\n  }\n\n  static create(): BlogBuilder {\n    return new BlogBuilder();\n  }\n}\n\nexport default Blog;\n","import moment, { utc } from 'moment';\nimport { CareerModel } from 'src/model';\nimport AbstractBuilder from './AbstractBuilder';\n\nclass CareerBuilder extends AbstractBuilder<CareerModel> {\n  private _description = '';\n  private _endDate = moment();\n  private _post = '';\n  private _site = '';\n  private _startDate = moment();\n  private _tools = '';\n\n  description(description: string): CareerBuilder {\n    this._description = description;\n    return this;\n  }\n\n  endDate(endDate: string | null): CareerBuilder {\n    this._endDate = utc(endDate);\n    return this;\n  }\n\n  post(post: string): CareerBuilder {\n    this._post = post;\n    return this;\n  }\n\n  site(site: string): CareerBuilder {\n    this._site = site;\n    return this;\n  }\n\n  startDate(startDate: string): CareerBuilder {\n    this._startDate = utc(startDate);\n    return this;\n  }\n\n  tools(tools: string): CareerBuilder {\n    this._tools = tools;\n    return this;\n  }\n\n  build(): CareerModel {\n    return new CareerModel(\n      this._id,\n      this._title,\n      this._description,\n      this._post,\n      this._site,\n      this._tools,\n      this._startDate,\n      this._endDate\n    );\n  }\n}\n\nexport default CareerBuilder;\n","import { Moment } from 'moment';\nimport SimpleModel from 'src/model/SimpleModel';\nimport CareerBuilder from './CareerBuilder';\n\nconst DATE_FORMAT = 'MMMM YYYY';\n\nclass Career extends SimpleModel {\n  private _description: string;\n  private _endDate: Moment;\n  private _post: string;\n  private _site: string;\n  private _startDate: Moment;\n  private _tools: string;\n\n  constructor(\n    id: string,\n    title: string,\n    description: string,\n    post: string,\n    site: string,\n    tools: string,\n    startDate: Moment,\n    endDate: Moment\n  ) {\n    super(id, title);\n    this._description = description;\n    this._endDate = endDate;\n    this._post = post;\n    this._site = site;\n    this._startDate = startDate;\n    this._tools = tools;\n  }\n\n  get post(): string {\n    return this._post;\n  }\n\n  get description(): string {\n    return this._description;\n  }\n\n  get site(): string {\n    return this._site;\n  }\n\n  get tools(): string {\n    return this._tools;\n  }\n\n  get startDate(): Moment {\n    return this._startDate;\n  }\n\n  get endDate(): Moment {\n    return this._endDate;\n  }\n\n  formatDates(): string {\n    if (this._startDate.isValid()) {\n      const string1 = this._startDate.format(DATE_FORMAT);\n      if (this._endDate.isValid()) {\n        return `${string1} - ${this._endDate.format(DATE_FORMAT)}`;\n      }\n      return `Since ${string1}`;\n    }\n    return '';\n  }\n\n  static create(): CareerBuilder {\n    return new CareerBuilder();\n  }\n}\n\nexport default Career;\n","import { BlogModel } from 'src/model';\nimport { IBlogRawData } from 'src/types';\n\nexport const blogModelAdapter = (data: IBlogRawData): BlogModel => {\n  const { _id, date, link, linkCaption, title } = data;\n  // prettier-ignore\n  return BlogModel.create()\n    .date(date)\n    .link(link)\n    .linkCaption(linkCaption)\n    .title(title)\n    .id(_id)\n    .build();\n};\n\nexport const blogListAdapter = (items: readonly IBlogRawData[]): BlogModel[] => items.map(blogModelAdapter);\n","import axios, { AxiosResponse } from 'axios';\nimport { API_PATH } from 'src/const';\nimport { IBlogRawData } from 'src/types';\n\nexport const loadBlogList = async (): Promise<AxiosResponse<IBlogRawData[]>> => axios.get(`${API_PATH}/blog`);\n\nexport const loadBlog = async (id: string): Promise<AxiosResponse<IBlogRawData>> => axios.get(`${API_PATH}/blog/${id}`);\n","import { AxiosResponse } from 'axios';\nimport { call, CallEffect, ForkEffect, put, PutEffect, takeEvery } from 'redux-saga/effects';\nimport { BLOG_LOAD_LIST, blogLoadListError, blogLoadListSuccess } from 'src/actions';\nimport { blogListAdapter } from 'src/adapter/blog';\nimport { loadBlogList as loadBlogListApi } from 'src/api/blog';\nimport { IBlogRawData } from 'src/types';\n\nexport function* loadBlogList(): Generator<PutEffect | CallEffect> {\n  try {\n    const response = yield call(loadBlogListApi);\n    const { data } = response as AxiosResponse<IBlogRawData[]>;\n    const items = yield call(blogListAdapter, data);\n    yield put(blogLoadListSuccess(items));\n  } catch (e) {\n    const { message } = e;\n    console.log(`blogLoadListError: ${message}`);\n    yield put(blogLoadListError(message));\n  }\n}\n\nfunction* watchActions(): Generator<ForkEffect> {\n  yield takeEvery(BLOG_LOAD_LIST, loadBlogList);\n}\n\nexport default watchActions;\n","import { CareerModel } from 'src/model';\nimport { ICareerRawData } from 'src/types';\n\nexport const careerModelAdapter = (data: ICareerRawData): CareerModel => {\n  const { _id, title, description, post, site, tools, startDate, endDate } = data;\n  // prettier-ignore\n  return CareerModel.create()\n    .description(description)\n    .post(post)\n    .site(site)\n    .tools(tools)\n    .startDate(startDate)\n    .endDate(endDate)\n    .title(title)\n    .id(_id)\n    .build();\n};\n\nexport const careerListAdapter = (items: readonly ICareerRawData[]): CareerModel[] => items.map(careerModelAdapter);\n","import axios, { AxiosResponse } from 'axios';\nimport { API_PATH } from 'src/const';\nimport { ICareerRawData } from 'src/types';\n\nexport const loadCareerList = async (): Promise<AxiosResponse<ICareerRawData[]>> => axios.get(`${API_PATH}/career`);\n\nexport const loadCareer = async (id: string): Promise<AxiosResponse<ICareerRawData>> =>\n  axios.get(`${API_PATH}/career/${id}`);\n","import { AxiosResponse } from 'axios';\nimport { call, CallEffect, ForkEffect, put, PutEffect, takeEvery } from 'redux-saga/effects';\nimport { CAREER_LOAD_LIST, careerLoadListError, careerLoadListSuccess } from 'src/actions';\nimport { careerListAdapter } from 'src/adapter/career';\nimport { loadCareerList as loadCareerListApi } from 'src/api/career';\nimport { ICareerRawData } from 'src/types';\n\nexport function* loadCareerList(): Generator<PutEffect | CallEffect> {\n  try {\n    const response = yield call(loadCareerListApi);\n    const { data } = response as AxiosResponse<ICareerRawData[]>;\n    const items = yield call(careerListAdapter, data);\n    yield put(careerLoadListSuccess(items));\n  } catch (e) {\n    const { message } = e;\n    console.log(`careerLoadListError: ${message}`);\n    yield put(careerLoadListError(message));\n  }\n}\n\nexport function* watchActions(): Generator<ForkEffect> {\n  yield takeEvery(CAREER_LOAD_LIST, loadCareerList);\n}\n\nexport default watchActions;\n","import { all, AllEffect, ForkEffect } from 'redux-saga/effects';\nimport { default as blogSaga } from './blog';\nimport { default as careerSaga } from './career';\n\nexport default function* (): Generator<AllEffect<Generator<ForkEffect>>> {\n  yield all([blogSaga(), careerSaga()]);\n}\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from 'src/reducers';\nimport rootSaga from 'src/saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(sagaMiddleware),\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f): unknown => f\n  )\n);\n\nsagaMiddleware.run(rootSaga);\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nfunction registerValidSW(swUrl: string): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = (): void => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = (): void => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response: Response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport default function register(): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString());\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from 'src/components';\nimport store from 'src/store';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'src/assets/styles.scss';\n\n/**\n * Site root component\n */\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}