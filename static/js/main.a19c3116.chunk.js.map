{"version":3,"sources":["components/Pages/Main/Main.module.scss","components/Navigation/Menu.module.scss","container/Page/Container.module.scss","components/Pages/Blog.module.scss","components/Pages/Main/GitHub.module.scss","components/Pages/Career.module.scss","components/Pages/Contacts.module.scss","components/Layout/Content.module.scss","assets/images/artyom.jpg","assets/images/loading-indicator.svg","assets/images/rybinsk.jpg","components/Navigation/LoadingIndicator.module.scss","components/Pages/About.module.scss","components/Pages/NotFound.module.scss","components/Layout/Footer.module.scss","components/Navigation/LoadingIndicator.tsx","const/Html.ts","const/Pages.ts","components/Navigation/Menu.tsx","container/Data/index.tsx","container/Page/index.tsx","actions/index.ts","components/Pages/Main/GitHub.tsx","components/Pages/Main/index.tsx","components/Pages/About.tsx","model/SimpleModel.ts","model/AbstractBuilder.ts","model/BlogBuilder.ts","model/Blog.ts","model/CareerBuilder.ts","model/Career.ts","model/Source.ts","selectors/index.ts","components/Pages/Blog.tsx","components/Pages/Career.tsx","components/Pages/Contacts.tsx","components/Pages/NotFound.tsx","components/Navigation/Routes.tsx","components/Layout/Content.tsx","components/Layout/Header.tsx","components/Layout/Footer.tsx","components/App/index.tsx","reducers/app.ts","reducers/blog.ts","reducers/career.ts","reducers/index.ts","store/index.ts","registerServiceWorker.ts","index.tsx"],"names":["module","exports","LoadingIndicator","className","styles","container","BLANK","REL","PAGES","id","name","url","Menu","map","exact","item","activeClassName","active","to","key","AbstractDataContainer","this","props","items","length","getSource","loadList","Page","getContent","Component","actionCreators","appLoading","loading","type","payload","connect","app","children","title","narrow","useContext","NarrowContext","contentClass","wide","svgRef","React","createRef","contributionEffectWrapper","contribution","setContribution","update","needUpdate","data","axios","get","then","GitHub","useState","useEffect","wrapper","document","createElement","innerHTML","svgContainer","querySelector","current","extractSvg","ref","contributions","LINKS","CONTENT","image","src","artyom","alt","contentBlock","href","target","rel","Main","About","bio","value","SimpleModel","_id","_title","AbstractBuilder","BlogBuilder","_year","_month","_day","_link","_linkCaption","year","month","day","link","linkCaption","date","moment","utc","BlogModel","Blog","_date","format","CareerBuilder","_description","_post","_site","_tools","_startDate","_endDate","post","description","site","tools","startDate","endDate","CareerModel","Career","isValid","string1","API_URL","REQUEST_CONFIG","headers","create","end","before","after","endpoint","beforeLoad","afterLoad","build","loadById","blogItemsSelector","createSelector","blog","Object","values","careerItemsSelector","career","DATE_COMPARATOR","item1","item2","isBefore","mapDispatch","blogLoadList","createModel","source","blogList","sort","itemContainer","formatDate","createSource","state","careerLoadList","prepareTitle","header","careerList","dates","formatDates","titles","contacts","Contacts","NotFound","Routes","from","path","component","Content","background","Header","Footer","isNarrow","window","innerWidth","useResize","setNarrow","onResize","addEventListener","removeEventListener","createContext","App","Provider","initialState","action","detail","forEach","combineReducers","createStore","reducers","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","ReactDOM","render","store","getElementById","URL","process","toString","origin","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a19c3116.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentBlock\":\"Main_contentBlock__35It-\",\"image\":\"Main_image__29NLd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Menu_container__3KIkD\",\"item\":\"Menu_item__2nW-H\",\"active\":\"Menu_active__1GUrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__kWQIj\",\"wide\":\"Container_wide__tW8QP\",\"narrow\":\"Container_narrow__2oN-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContainer\":\"Blog_itemContainer__1TDJK\",\"title\":\"Blog_title__22mmK\",\"item\":\"Blog_item__2jZmB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GitHub_container__wj90o\",\"contributions\":\"GitHub_contributions__1WbSz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Career_item__-t69D\",\"detail\":\"Career_detail__PU-wa\",\"dates\":\"Career_dates__2gh9G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__2JS1d\",\"item\":\"Contacts_item__1xLX9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Content_background__oUGv3\",\"container\":\"Content_container__NzNFh\"};","module.exports = __webpack_public_path__ + \"static/media/artyom.bbb441b2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading-indicator.d727c8b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/rybinsk.47f71852.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoadingIndicator_container__1Z06v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"About_item__2Z-Pd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NotFound_container__3J7F_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__3w-dA\"};","import React, { FunctionComponent } from 'react';\nimport styles from './LoadingIndicator.module.scss';\n\n/**\n * Simple loading indicator based on SVG-image\n */\nconst LoadingIndicator: FunctionComponent = () => (\n  <div className='flexBox flexGrow-1 flexShrink-1 justifyContentCenter'>\n    <div className={styles.container} />\n  </div>\n);\n\nexport default LoadingIndicator;\n","export const BLANK = '_blank';\n\nexport const REL = 'noopener noreferrer';\n","export const ABOUT = { id: 'about', name: 'About', url: 'about' };\nexport const BLOG = { id: 'blog', name: 'Blog', url: 'blog' };\nexport const CAREER = { id: 'career', name: 'Career', url: 'career' };\nexport const CONTACTS = { id: 'contacts', name: 'Contacts', url: 'contacts' };\nexport const MAIN = { id: 'main', name: 'Main', url: '' };\n\n/**\n * Pages settings\n */\nexport const PAGES = [MAIN, ABOUT, BLOG, CAREER, CONTACTS];\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { PAGES } from 'src/const';\nimport styles from './Menu.module.scss';\n\n/**\n * Menu items render function\n */\nconst renderItems = (): ReactNode[] =>\n  PAGES.map(\n    ({ id, name, url }): ReactNode => (\n      <NavLink exact={!url} className={styles.item} activeClassName={styles.active} to={`/${url}`} key={id}>\n        {name}\n      </NavLink>\n    )\n  );\n\n/**\n * /**\n * Navigation menu component\n */\nconst Menu: FunctionComponent = () => (\n  <nav className={`flexBox ${styles.container}`} id='menu'>\n    {renderItems()}\n  </nav>\n);\n\nexport default Menu;\n","import React, { Component, ReactNode } from 'react';\nimport { PageContainer } from 'src/container';\nimport { IDataProps, Source } from 'src/interface';\n\n/**\n * Abstract page container with data source\n */\nabstract class AbstractDataContainer<TData, TProps extends IDataProps<TData> = IDataProps<TData>> extends Component<\n  TProps\n> {\n  public componentDidMount(): void {\n    const { items } = this.props;\n    if (!items.length) {\n      this.getSource().loadList();\n    }\n  }\n\n  public render(): ReactNode {\n    const { items } = this.props;\n    return <PageContainer>{this.getContent(items)}</PageContainer>;\n  }\n\n  protected abstract getSource(): Source;\n\n  protected abstract getContent(items: TData[]): ReactNode | ReactNode[];\n}\n\nexport default AbstractDataContainer;\n","import React, { FunctionComponent, ReactNode, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from 'src/actions';\nimport { NarrowContext } from 'src/components';\nimport { LoadingIndicator } from 'src/components/Navigation';\nimport { IAppState, IState } from 'src/interface';\nimport styles from './Container.module.scss';\n\n/**\n * Container properties interface\n */\ninterface IProperties {\n  title?: string;\n  children?: ReactNode | ReactNode[];\n  loading?: boolean;\n}\n\nconst mapStateToProps = ({ app: { loading } }: IState): IAppState => ({ loading });\n\nconst actionCreators = {\n  appLoading: actions.appLoading,\n};\n\n/**\n * Page container with title\n */\nconst Container: FunctionComponent = (props: IProperties) => {\n  const { children, loading, title } = props;\n  const narrow = useContext(NarrowContext);\n  const contentClass = `flexBox flexColumn ${styles.container} ${narrow ? styles.narrow : styles.wide}`;\n  return loading ? (\n    <div className={contentClass}>\n      <LoadingIndicator />\n    </div>\n  ) : (\n    <div className={contentClass}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n};\n\nexport default connect<IAppState, {}, IProperties, IState>(mapStateToProps, actionCreators)(Container);\n","import { IAppLoading, ILoadBlogList, ILoadCareerList } from 'src/interface';\nimport { BlogModel, CareerModel } from 'src/model';\n\nexport const APP_LOADING = 'APP_LOADING';\nexport const BLOG_LOAD_LIST = 'BLOG_LOAD_LIST';\nexport const CAREER_LOAD_LIST = 'CAREER_LOAD_LIST';\n\n/**\n * App loading state change action\n */\nexport const appLoading = (loading: boolean): IAppLoading => ({\n  type: APP_LOADING,\n  payload: { loading },\n});\n\n/**\n * Load Blog data action\n */\nexport const blogLoadList = (items: BlogModel[]): ILoadBlogList => ({\n  type: BLOG_LOAD_LIST,\n  payload: { items },\n});\n\n/**\n * Load Career data action\n */\nexport const careerLoadList = (items: CareerModel[]): ILoadCareerList => ({\n  type: CAREER_LOAD_LIST,\n  payload: { items },\n});\n","import React, { Dispatch, FunctionComponent, SetStateAction, useEffect, useState } from 'react';\nimport axios, { AxiosResponse } from 'axios';\nimport { LoadingIndicator } from 'src/components/Navigation';\nimport styles from './GitHub.module.scss';\n\nconst PROXY = 'https://urlreq.appspot.com/req?method=GET&url=';\nconst CONTR = 'https://github.com/users/Artyom-Ganev/contributions';\nconst svgRef = React.createRef<HTMLDivElement>();\n\n/**\n * Load GitHub contribution request\n * @param {Function} update function\n */\nconst loadData = (update: (data: string) => void): void => {\n  axios\n    .get(`${PROXY}${CONTR}`)\n    .then(({ data }: AxiosResponse<string>) => {\n      update(data);\n    })\n    .catch(() => {\n      update('');\n    });\n};\n\n/**\n * Load GitHub contribution data hook\n */\nconst contributionEffectWrapper = (\n  contribution: string,\n  setContribution: Dispatch<SetStateAction<string>>\n): void | (() => void) => {\n  if (contribution) {\n    return;\n  }\n\n  let needUpdate = true;\n  const updater = (data: string): void => {\n    if (needUpdate) {\n      setContribution(data);\n    }\n  };\n  loadData(updater);\n\n  return (): void => {\n    // useEffect was cancelled\n    needUpdate = false;\n  };\n};\n\n/**\n * Extract Svg Element from contribution data\n * @param {String} contribution data\n * @return {HTMLDivElement} Svg Element\n */\nconst extractSvg = (contribution: string): void => {\n  const wrapper = document.createElement('div');\n  wrapper.innerHTML = contribution;\n  const svgContainer = wrapper.querySelector<HTMLDivElement>('.js-calendar-graph');\n  if (svgRef.current) {\n    svgRef.current.innerHTML = svgContainer ? svgContainer.innerHTML : '';\n  }\n};\n\n/**\n * Github contributions chart component\n */\nconst GitHub: FunctionComponent = () => {\n  const [contribution, setContribution] = useState<string>('');\n  useEffect(() => contributionEffectWrapper(contribution, setContribution), [contribution]);\n  useEffect(() => extractSvg(contribution), [contribution]);\n  return (\n    <div className={`flexBox justifyContentCenter ${styles.container}`}>\n      <div ref={svgRef} className={styles.contributions} />\n      {!svgRef.current && <LoadingIndicator />}\n    </div>\n  );\n};\n\nexport default GitHub;\n","import React, { FunctionComponent, useContext } from 'react';\nimport { artyom } from 'src/assets';\nimport { NarrowContext } from 'src/components';\nimport { BLANK, REL } from 'src/const';\nimport { PageContainer } from 'src/container';\nimport GitHub from './GitHub';\nimport styles from './Main.module.scss';\n\nconst LINKS = {\n  Back: 'https://github.com/Artyom-Ganev/artyom-ganev-server',\n  Front: 'https://github.com/Artyom-Ganev/artyom-ganev-site',\n  Rybinsk: 'https://en.wikipedia.org/wiki/Rybinsk',\n};\n\nconst CONTENT = (\n  <div>\n    <img className={styles.image} src={artyom} alt='Artyom' title='artyom.jpg' />\n    <h2 className={styles.contentBlock}>Hi! My name is Artyom.</h2>\n    <div className={styles.contentBlock}>\n      I&apos;m a programmer, based in&nbsp;\n      <a href={LINKS.Rybinsk} target={BLANK} rel={REL}>\n        Rybinsk\n      </a>\n      ,&nbsp;Russia. There are some facts about me on this site.\n    </div>\n    <div className={styles.contentBlock}>\n      You can contact me if you have some ideas for it&apos;s improvement or if you find some bugs, typos etc. I&apos;m\n      still working on it.\n    </div>\n    <div className={styles.contentBlock}>\n      Frontend of this site is based on React, Redux, TypeScript and Sass, the sources of this part are located on\n      GitHub&nbsp;\n      <a href={LINKS.Front} target={BLANK} rel={REL}>\n        here\n      </a>\n      .\n    </div>\n    <div className={styles.contentBlock}>\n      Backend uses Spring Boot, Maven, Heroku and PostgreSQL and is located&nbsp;\n      <a href={LINKS.Back} target={BLANK} rel={REL}>\n        here\n      </a>\n      .\n    </div>\n  </div>\n);\n\n/**\n * Main page component\n */\nconst Main: FunctionComponent = () => {\n  const narrow = useContext(NarrowContext);\n  return (\n    <PageContainer>\n      {CONTENT}\n      {!narrow && <GitHub />}\n    </PageContainer>\n  );\n};\n\nexport default Main;\n","import React, { FunctionComponent } from 'react';\nimport { bio } from 'src/assets';\nimport { PageContainer } from 'src/container';\nimport styles from './About.module.scss';\n\n/**\n * About page component\n */\nconst About: FunctionComponent = () => (\n  <PageContainer title='Artyom Ganev'>\n    {bio.data.map((value: string, key: number) => (\n      <div key={key} className={styles.item}>\n        {value}\n      </div>\n    ))}\n  </PageContainer>\n);\n\nexport default About;\n","class SimpleModel {\n  protected _id = '';\n  protected _title = '';\n\n  protected constructor(id: string, title: string) {\n    this._id = id;\n    this._title = title;\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  get title(): string {\n    return this._title;\n  }\n}\n\nexport default SimpleModel;\n","import { SimpleModel } from 'src/model';\n\nabstract class AbstractBuilder<TModel extends SimpleModel> {\n  protected _id = '';\n  protected _title = '';\n\n  id(id: string): AbstractBuilder<TModel> {\n    this._id = id;\n    return this;\n  }\n\n  title(title: string): AbstractBuilder<TModel> {\n    this._title = title;\n    return this;\n  }\n\n  abstract build(): TModel;\n}\n\nexport default AbstractBuilder;\n","import moment from 'moment';\nimport { BlogModel } from 'src/model';\nimport AbstractBuilder from './AbstractBuilder';\n\nclass BlogBuilder extends AbstractBuilder<BlogModel> {\n  private _year = 0;\n  private _month = 0;\n  private _day = 0;\n  private _link = '';\n  private _linkCaption = '';\n\n  year(year: number): BlogBuilder {\n    this._year = year;\n    return this;\n  }\n\n  month(month: number): BlogBuilder {\n    this._month = month;\n    return this;\n  }\n\n  day(day: number): BlogBuilder {\n    this._day = day;\n    return this;\n  }\n\n  link(link: string): BlogBuilder {\n    this._link = link;\n    return this;\n  }\n\n  linkCaption(linkCaption: string): BlogBuilder {\n    this._linkCaption = linkCaption;\n    return this;\n  }\n\n  build(): BlogModel {\n    const date = moment.utc(`${this._year}-${this._month}-${this._day}`, 'YYYY-MM-DD');\n    return new BlogModel(this._id, this._title, date, this._link, this._linkCaption);\n  }\n}\n\nexport default BlogBuilder;\n","import { Moment } from 'moment';\nimport SimpleModel from 'src/model/SimpleModel';\nimport BlogBuilder from './BlogBuilder';\n\nclass Blog extends SimpleModel {\n  private _date: Moment;\n  private _link: string;\n  private _linkCaption: string;\n\n  constructor(id: string, title: string, date: Moment, link: string, linkCaption: string) {\n    super(id, title);\n    this._date = date;\n    this._link = link;\n    this._linkCaption = linkCaption;\n  }\n\n  get date(): Moment {\n    return this._date;\n  }\n\n  get link(): string {\n    return this._link;\n  }\n\n  get linkCaption(): string {\n    return this._linkCaption;\n  }\n\n  formatDate(): string {\n    return this.date.format('Do MMMM YYYY');\n  }\n\n  static create(): BlogBuilder {\n    return new BlogBuilder();\n  }\n}\n\nexport default Blog;\n","import moment from 'moment';\nimport { CareerModel } from 'src/model';\nimport AbstractBuilder from './AbstractBuilder';\n\nclass CareerBuilder extends AbstractBuilder<CareerModel> {\n  private _description = '';\n  private _post = '';\n  private _site = '';\n  private _tools = '';\n  private _startDate = moment();\n  private _endDate = moment();\n\n  post(post: string): CareerBuilder {\n    this._post = post;\n    return this;\n  }\n\n  description(description: string): CareerBuilder {\n    this._description = description;\n    return this;\n  }\n\n  site(site: string): CareerBuilder {\n    this._site = site;\n    return this;\n  }\n\n  tools(tools: string): CareerBuilder {\n    this._tools = tools;\n    return this;\n  }\n\n  startDate(startDate: Date): CareerBuilder {\n    this._startDate = moment.utc(startDate);\n    return this;\n  }\n\n  endDate(endDate: Date): CareerBuilder {\n    this._endDate = moment.utc(endDate);\n    return this;\n  }\n\n  build(): CareerModel {\n    return new CareerModel(\n      this._id,\n      this._title,\n      this._description,\n      this._post,\n      this._site,\n      this._tools,\n      this._startDate,\n      this._endDate\n    );\n  }\n}\n\nexport default CareerBuilder;\n","import { Moment } from 'moment';\nimport SimpleModel from 'src/model/SimpleModel';\nimport CareerBuilder from './CareerBuilder';\n\nconst DATE_FORMAT = 'MMMM YYYY';\n\nclass Career extends SimpleModel {\n  private _description: string;\n  private _post: string;\n  private _site: string;\n  private _tools: string;\n  private _startDate: Moment;\n  private _endDate: Moment;\n\n  constructor(\n    id: string,\n    title: string,\n    description: string,\n    post: string,\n    site: string,\n    tools: string,\n    startDate: Moment,\n    endDate: Moment\n  ) {\n    super(id, title);\n    this._description = description;\n    this._post = post;\n    this._site = site;\n    this._tools = tools;\n    this._startDate = startDate;\n    this._endDate = endDate;\n  }\n\n  get post(): string {\n    return this._post;\n  }\n\n  get description(): string {\n    return this._description;\n  }\n\n  get site(): string {\n    return this._site;\n  }\n\n  get tools(): string {\n    return this._tools;\n  }\n\n  get startDate(): Moment {\n    return this._startDate;\n  }\n\n  get endDate(): Moment {\n    return this._endDate;\n  }\n\n  formatDates(): string {\n    if (this._startDate.isValid()) {\n      const string1 = this._startDate.format(DATE_FORMAT);\n      if (this._endDate.isValid()) {\n        return `${string1} - ${this._endDate.format(DATE_FORMAT)}`;\n      }\n      return `Since ${string1}`;\n    }\n    return '';\n  }\n\n  static create(): CareerBuilder {\n    return new CareerBuilder();\n  }\n}\n\nexport default Career;\n","import axios, { AxiosResponse } from 'axios';\nimport { ISourceBuilder, Source } from 'src/interface';\n\nconst API_URL = 'https://shielded-brushlands-46595.herokuapp.com';\nconst REQUEST_CONFIG = { headers: { 'x-requested-with': 'xhr' } } as const;\n\n/**\n * Data source implementation\n */\nconst buildSource = <TPage>(endpoint: string, beforeLoad: () => void, afterLoad: (data: TPage[]) => void): Source => {\n  return {\n    /**\n     * Load all data items\n     */\n    loadList(): void {\n      beforeLoad();\n      axios\n        .get<TPage[]>(`${API_URL}/${endpoint}/`, REQUEST_CONFIG)\n        .then(({ data }: AxiosResponse<TPage[]>) => {\n          afterLoad(data);\n        })\n        .catch(() => afterLoad([]));\n    },\n\n    /**\n     * Load single data item\n     * @param {String} id of the item\n     */\n    loadById(id: string): void {\n      beforeLoad();\n      axios\n        .get<TPage>(`${API_URL}/${endpoint}/${id}`, REQUEST_CONFIG)\n        .then(({ data }: AxiosResponse<TPage>) => {\n          afterLoad([data]);\n        })\n        .catch(() => afterLoad([]));\n    },\n  };\n};\n\n/**\n * Data source builder\n */\nconst create = <TPage>(): ISourceBuilder<TPage> => {\n  let end: string;\n  let before: () => void;\n  let after: (data: TPage[]) => void;\n  return {\n    endpoint(value: string): ISourceBuilder<TPage> {\n      end = value;\n      return this;\n    },\n    beforeLoad(value: () => void): ISourceBuilder<TPage> {\n      before = value;\n      return this;\n    },\n    afterLoad(value: (data: TPage[]) => void): ISourceBuilder<TPage> {\n      after = value;\n      return this;\n    },\n    build(): Source {\n      return buildSource<TPage>(end, before, after);\n    },\n  };\n};\n\nexport default create;\n","import { createSelector } from 'reselect';\nimport { IBlogItems, ICareerItems, IState } from 'src/interface';\n\nexport const blogItemsSelector = createSelector(\n  ({ blog }: IState) => blog,\n  (blog: { items: IBlogItems }) => Object.values(blog.items)\n);\n\nexport const careerItemsSelector = createSelector(\n  ({ career }: IState) => career,\n  (career: { items: ICareerItems }) => Object.values(career.items)\n);\n","import React, { ReactNode } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from 'src/actions';\nimport { APP_LOADING, BLOG_LOAD_LIST } from 'src/actions';\nimport { BLANK, REL } from 'src/const';\nimport { AbstractDataContainer } from 'src/container';\nimport { IAppLoading, IDataProps, ILoadBlogList, IRawBlogData, IState, Source } from 'src/interface';\nimport { BlogModel, createSource } from 'src/model';\nimport { blogItemsSelector } from 'src/selectors';\nimport styles from './Blog.module.scss';\n\ninterface IDispatchProps {\n  appLoading: typeof actions.appLoading;\n  blogLoadList: typeof actions.blogLoadList;\n}\n\ntype Props = IDataProps<BlogModel> & IDispatchProps;\n\nconst DATE_COMPARATOR = (item1: BlogModel, item2: BlogModel): number => (item1.date.isBefore(item2.date) ? 1 : -1);\n\nconst mapStateToProps = (state: IState): IDataProps<BlogModel> => ({ items: blogItemsSelector(state) });\n\nconst mapDispatch: IDispatchProps = {\n  appLoading: (loading: boolean): IAppLoading => ({\n    type: APP_LOADING,\n    payload: { loading },\n  }),\n  blogLoadList: (items: BlogModel[]): ILoadBlogList => ({\n    type: BLOG_LOAD_LIST,\n    payload: { items },\n  }),\n};\n\nconst createModel = ({ id, day, month, year, link, linkCaption, title }: IRawBlogData): BlogModel =>\n  // prettier-ignore\n  BlogModel.create()\n    .year(year)\n    .month(month)\n    .day(day)\n    .link(link)\n    .linkCaption(linkCaption)\n    .title(title)\n    .id(id)\n    .build();\n\n/**\n * Blog page\n */\nclass Blog extends AbstractDataContainer<BlogModel, Props> {\n  private readonly source: Source;\n\n  constructor(props: Props) {\n    super(props);\n    const { appLoading, blogLoadList } = props;\n    this.source = createSource<IRawBlogData>()\n      .endpoint('blog')\n      .beforeLoad(() => appLoading(true))\n      .afterLoad((data: IRawBlogData[]) => blogLoadList(data.map(createModel)))\n      .build();\n  }\n\n  protected getSource = (): Source => this.source;\n\n  protected getContent = (blogList: BlogModel[]): ReactNode[] =>\n    blogList.sort(DATE_COMPARATOR).map((item: BlogModel) => {\n      const { id, title, link, linkCaption } = item;\n      return (\n        <div key={id} className={styles.itemContainer}>\n          <div className={styles.title}>{item.formatDate()}</div>\n          <div className={styles.item}>{title}</div>\n          {link && (\n            <a href={link} target={BLANK} rel={REL} title='Click for details'>\n              {linkCaption}\n            </a>\n          )}\n        </div>\n      );\n    });\n}\n\nexport default connect<IDataProps<BlogModel>, IDispatchProps, {}, IState>(mapStateToProps, mapDispatch)(Blog);\n","import React, { ReactNode } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from 'src/actions';\nimport { APP_LOADING, CAREER_LOAD_LIST } from 'src/actions';\nimport { BLANK, REL } from 'src/const';\nimport { AbstractDataContainer } from 'src/container';\nimport { IAppLoading, ICareerRawData, IDataProps, ILoadCareerList, IState, Source } from 'src/interface';\nimport { CareerModel, createSource } from 'src/model';\nimport { careerItemsSelector } from 'src/selectors';\nimport styles from './Career.module.scss';\n\ninterface IDispatchProps {\n  appLoading: typeof actions.appLoading;\n  careerLoadList: typeof actions.careerLoadList;\n}\n\ntype Props = IDataProps<CareerModel> & IDispatchProps;\n\nconst mapStateToProps = (state: IState): IDataProps<CareerModel> => ({ items: careerItemsSelector(state) });\n\nconst mapDispatch: IDispatchProps = {\n  appLoading: (loading: boolean): IAppLoading => ({\n    type: APP_LOADING,\n    payload: { loading },\n  }),\n  careerLoadList: (items: CareerModel[]): ILoadCareerList => ({\n    type: CAREER_LOAD_LIST,\n    payload: { items },\n  }),\n};\n\nconst createModel = ({ id, title, description, post, site, tools, startDate, endDate }: ICareerRawData): CareerModel =>\n  // prettier-ignore\n  CareerModel.create()\n    .description(description)\n    .post(post)\n    .site(site)\n    .tools(tools)\n    .startDate(startDate)\n    .endDate(endDate)\n    .title(title)\n    .id(id)\n    .build();\n\n/**\n * Career page\n */\nclass Career extends AbstractDataContainer<CareerModel, Props> {\n  private readonly source: Source;\n\n  constructor(props: Props) {\n    super(props);\n    const { appLoading, careerLoadList } = props;\n    this.source = createSource<ICareerRawData>()\n      .endpoint('career')\n      .beforeLoad(() => appLoading(true))\n      .afterLoad((data: ICareerRawData[]) => careerLoadList(data.map(createModel)))\n      .build();\n  }\n\n  protected getSource = (): Source => this.source;\n\n  private prepareTitle = (site: string, title: string): ReactNode => {\n    const header = <h3>{title}</h3>;\n    return site ? (\n      <a href={site} target={BLANK} rel={REL} title='Click for details'>\n        {header}\n      </a>\n    ) : (\n      <h3>{title}</h3>\n    );\n  };\n\n  /**\n   * Career items markup\n   */\n  protected getContent = (careerList: CareerModel[]): ReactNode => {\n    return careerList.map((item: CareerModel) => {\n      const { id, site, title, post, description, tools } = item;\n      return (\n        <div key={id} className={styles.item}>\n          {this.prepareTitle(site, title)}\n          <div className={styles.dates}>{item.formatDates()}</div>\n          <div>Post:&nbsp;{post}</div>\n          <div>{description}</div>\n          <div className='flexBox flexColumn'>\n            <div>Tools:&nbsp;{tools}</div>\n          </div>\n        </div>\n      );\n    });\n  };\n}\n\nexport default connect<IDataProps<CareerModel>, IDispatchProps, {}, IState>(mapStateToProps, mapDispatch)(Career);\n","import React, { FunctionComponent } from 'react';\nimport { contacts } from 'src/assets';\nimport { BLANK, REL } from 'src/const';\nimport { PageContainer } from 'src/container';\nimport styles from './Contacts.module.scss';\n\n/**\n * Contact options interface\n */\ninterface IContact {\n  key: string;\n  value: string;\n  link: string;\n  title: string;\n}\n\n/**\n * Contacts titles markup\n */\nconst titles = contacts.data.map(({ key, value }: IContact) => <div key={key}>{value}:&nbsp;</div>);\n\n/**\n * Contacts items markup\n */\nconst items = contacts.data.map(({ key, link, title }: IContact) => (\n  <div key={key}>\n    <a href={link} target={BLANK} rel={REL}>\n      {title}\n    </a>\n  </div>\n));\n\n/**\n * Contacts page component\n */\nconst Contacts: FunctionComponent = () => (\n  <PageContainer>\n    <div className={`flexBox alignItemsBaseline justifyContentBetween ${styles.container}`}>\n      <div>{titles}</div>\n      <div className={styles.item}>{items}</div>\n    </div>\n  </PageContainer>\n);\n\nexport default Contacts;\n","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PageContainer } from 'src/container';\nimport styles from './NotFound.module.scss';\n\nconst TITLE = 'Page Not Found';\n\n/**\n * 404 page not component\n */\nconst NotFound: FunctionComponent = () => (\n  <PageContainer title={TITLE}>\n    <div className={styles.container}>\n      <Link to='/'>Go to main page</Link>\n    </div>\n  </PageContainer>\n);\n\nexport default NotFound;\n","import React, { FunctionComponent } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { About, Blog, Career, Contacts, Main, NotFound } from 'src/components/Pages';\n\n/**\n * Application routes component\n */\nconst Routes: FunctionComponent = () => (\n  <Switch>\n    <Redirect from='/main' to='/' />\n    <Route exact={true} path='/' component={Main} />\n    <Route exact={true} path='/about' component={About} />\n    <Route exact={true} path='/blog' component={Blog} />\n    <Route exact={true} path='/career' component={Career} />\n    <Route exact={true} path='/contacts' component={Contacts} />\n    <Route component={NotFound} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { FunctionComponent } from 'react';\nimport { Routes } from 'src/components/Navigation';\nimport styles from './Content.module.scss';\n\n/**\n * App Content component\n */\nconst Content: FunctionComponent = () => (\n  <>\n    <div className={styles.background} />\n    <div className={`flexBox flexColumn ${styles.container}`}>\n      <Routes />\n    </div>\n  </>\n);\n\nexport default Content;\n","import React, { FunctionComponent } from 'react';\nimport { Menu } from 'src/components/Navigation';\n\n/**\n * Header component\n */\nconst Header: FunctionComponent = () => (\n  <header className='flexBox'>\n    <Menu />\n  </header>\n);\n\nexport default Header;\n","import React, { FunctionComponent } from 'react';\nimport styles from './Footer.module.scss';\n\n/**\n * Footer component\n */\nconst Footer: FunctionComponent = () => (\n  <footer className={styles.container}>\n    <span>© 2019 All rights reserved</span>\n  </footer>\n);\n\nexport default Footer;\n","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { Content, Header, Footer } from 'src/components/Layout';\n\n/**\n * Check if the page is narrow\n */\nconst isNarrow = (): boolean => window.innerWidth <= 800;\n\n/**\n * Resize hook\n */\nconst useResize = (): boolean => {\n  const [narrow, setNarrow] = useState<boolean>(isNarrow());\n  useEffect(() => {\n    const onResize = (): void => setNarrow(isNarrow());\n    window.addEventListener('resize', onResize);\n    return (): void => window.removeEventListener('resize', onResize);\n  });\n  return narrow;\n};\n\nexport const NarrowContext = React.createContext(isNarrow());\n\n/**\n * Main application component\n */\nconst App: FunctionComponent = () => (\n  <HashRouter>\n    <div className='flexBox flexColumn'>\n      <Header />\n      <NarrowContext.Provider value={useResize()}>\n        <Content />\n      </NarrowContext.Provider>\n      <Footer />\n    </div>\n  </HashRouter>\n);\n\nexport default App;\n","import { APP_LOADING, BLOG_LOAD_LIST, CAREER_LOAD_LIST } from 'src/actions';\nimport { AppActionTypes, IAppState } from 'src/interface';\n\nconst initialState: IAppState = {\n  loading: false,\n};\n\n/**\n * App state reducer\n */\nconst app = (state: IAppState = initialState, action: AppActionTypes): IAppState => {\n  switch (action.type) {\n    case APP_LOADING: {\n      const { payload } = action;\n      return { ...state, loading: payload.loading };\n    }\n    case BLOG_LOAD_LIST: {\n      return { ...state, loading: false };\n    }\n    case CAREER_LOAD_LIST: {\n      return { ...state, loading: false };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default app;\n","import { BLOG_LOAD_LIST } from 'src/actions';\nimport { BlogActionsType, IBlogState } from 'src/interface';\n\nconst initialState: IBlogState = {\n  items: {},\n  detail: {},\n};\n\n/**\n * Blog actions reducer\n */\nconst blog = (state: IBlogState = initialState, action: BlogActionsType): IBlogState => {\n  switch (action.type) {\n    case BLOG_LOAD_LIST: {\n      const { payload } = action;\n      const items = state.items;\n      payload.items.forEach((item) => {\n        items[item.id] = item;\n      });\n      return { ...state, items };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default blog;\n","import { CAREER_LOAD_LIST } from 'src/actions';\nimport { CareerActionsType, ICareerState } from 'src/interface';\n\nconst initialState: ICareerState = {\n  items: {},\n  detail: {},\n};\n\n/**\n * Career actions reducer\n */\nconst career = (state: ICareerState = initialState, action: CareerActionsType): ICareerState => {\n  switch (action.type) {\n    case CAREER_LOAD_LIST: {\n      const { payload } = action;\n      const items = state.items;\n      payload.items.forEach((item) => {\n        items[item.id] = item;\n      });\n      return { ...state, items };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default career;\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport blog from './blog';\nimport career from './career';\n\nexport default combineReducers({ app, blog, career });\n","import { createStore } from 'redux';\nimport reducers from 'src/reducers';\n\nexport default createStore(reducers);\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nfunction registerValidSW(swUrl: string): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = (): void => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = (): void => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response: Response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport default function register(): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString());\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from 'src/components';\nimport store from 'src/store';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'src/assets/styles.scss';\n\n/**\n * Site root component\n */\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}