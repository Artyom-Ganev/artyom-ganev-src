{"version":3,"sources":["resources/artyom.jpg","constants/Pages.ts","components/Navigation/Menu.tsx","constants/Html.ts","actions/index.ts","components/Navigation/LoadingIndicator.tsx","components/Page/Container.tsx","components/Page/Main.tsx","components/Page/About.tsx","utils/Date.ts","components/Page/Data/Abstract.tsx","model/Source.ts","components/Page/Blog.tsx","components/Page/Career.tsx","components/Page/Contacts.tsx","components/Page/NotFound.tsx","components/App.tsx","registerServiceWorker.ts","reducers/index.ts","store/index.ts","index.tsx"],"names":["module","exports","PAGES","id","name","url","className","map","exact","activeClassName","to","key","BLANK","REL","appLoading","createAction","appResize","blogLoadList","careerLoadList","actionCreators","actions","connect","app","loading","narrow","props","children","title","contentClass","LINKS","CONTENT_BLOCK","CONTENT","src","img","alt","href","target","rel","bio","data","value","DATE_FORMAT","month","year","DateUtil","dateStr","arr","split","day","Date","parseInt","date","parseDateFromString","Intl","DateTimeFormat","format","start","end","startDate","string1","toLocaleDateString","endDate","Abstract","this","items","length","getSource","getList","getContent","Component","API_URL","REQUEST_CONFIG","headers","Source","endpoint","beforeLoad","afterLoad","axios","get","then","catch","DATE_COMPARATOR","item1","item2","Blog","source","blogList","sort","link","linkCaption","blog","Object","values","Career","prepareTitle","site","header","careerList","post","description","tools","prepareDates","career","titles","contacts","isNarrow","window","innerWidth","App","render","from","path","component","Main","About","Contacts","NotFound","onResize","addEventListener","removeEventListener","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","error","handleActions","payload","newItems","forEach","item","detail","combineReducers","createStore","reducers","ReactDOM","store","document","getElementById","URL","process","toString","origin","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f672b6d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/artyom.bbb441b2.jpg\";","export const ABOUT = { id: 'about', name: \"About\", url: \"about\" };\nexport const BLOG = { id: 'blog', name: \"Blog\", url: \"blog\" };\nexport const CAREER = { id: 'career', name: \"Career\", url: \"career\" };\nexport const CONTACTS = { id: 'contacts', name: \"Contacts\", url: \"contacts\" };\nexport const MAIN = { id: 'main', name: \"Main\", url: \"\" };\n\n/**\n * Pages settings\n */\nexport const PAGES = [MAIN, ABOUT, BLOG, CAREER, CONTACTS];","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { PAGES } from '../../constants/Pages';\nimport './Menu.scss';\n\n/**\n * Menu items render function\n */\nconst renderItems = () =>\n  PAGES.map(({ id, name, url }) => (\n    <NavLink exact={!url} className='nav-menu__item' activeClassName='active' to={`/${url}`} key={id}>\n      {name}\n    </NavLink>\n  ));\n\n/**\n * /**\n * Navigation menu component\n */\nexport default () => (\n  <div className='flexBox nav-menu__root' id='menu'>\n    {renderItems()}\n  </div>\n);\n","export const BLANK = '_blank';\n\nexport const REL = 'noopener noreferrer';","import { createAction } from 'redux-actions';\n\n/**\n * App loading state change action\n */\nexport const appLoading = createAction('APP_LOADING');\n\n/**\n * App resize state change action\n */\nexport const appResize = createAction('APP_RESIZE');\n\n/**\n * Load Blog data action\n */\nexport const blogLoadList = createAction('BLOG_LOAD_LIST');\n\n/**\n * Load Career data action\n */\nexport const careerLoadList = createAction('CAREER_LOAD_LIST');\n","import React from 'react';\nimport './LoadingIndicator.scss';\n\n/**\n * Simple loading indicator based on SVG-image\n */\nexport default () => (\n  <div className='flexBox flexGrow-1 flexShrink-1 justifyContentCenter'>\n    <div className='nav-loading__indicator' />\n  </div>\n);\n","import React, { ReactNode } from 'react';\nimport { connect } from 'react-redux';\nimport IState from '../../interface/IState';\nimport * as actions from '../../actions';\nimport LoadingIndicator from '../Navigation/LoadingIndicator';\nimport './Container.scss';\n\n/**\n * Container properties interface\n */\ninterface IProperties {\n  title?: string;\n  children?: ReactNode | ReactNode[];\n  loading?: boolean;\n  narrow: boolean;\n}\n\nconst mapStateToProps = ({ app: { loading, narrow } }: IState) => ({ loading, narrow });\n\nconst actionCreators = {\n  appLoading: actions.appLoading,\n};\n\n/**\n * Page container with title\n */\nconst Container = (props: IProperties) => {\n  const { children, loading, narrow, title } = props;\n  const contentClass = `flexBox flexColumn page-container__root${narrow ? '--narrow' : ''}`;\n  return loading ? (\n    <div className={contentClass}>\n      <LoadingIndicator />\n    </div>\n  ) : (\n    <div className={contentClass}>\n      {title && <h2>{title}</h2>}\n      <div>{children}</div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, actionCreators)(Container);\n","import React from 'react';\nimport { BLANK, REL } from '../../constants/Html';\nimport img from '../../resources/artyom.jpg';\nimport Container from './Container';\nimport './Main.scss';\n\nconst LINKS = {\n  Back: 'https://github.com/Artyom-Ganev/artyom-ganev-server',\n  Front: 'https://github.com/Artyom-Ganev/artyom-ganev-site',\n  Rybinsk: 'https://en.wikipedia.org/wiki/Rybinsk',\n};\n\nconst CONTENT_BLOCK = 'page-main__contentBlock';\n\nconst CONTENT = (\n  <div className='page-main__root'>\n    <img className='page-main__image' src={img} alt='Artyom' title='artyom.jpg' />\n    <h2 className={CONTENT_BLOCK}>Hi! My name is Artyom.</h2>\n    <div className={CONTENT_BLOCK}>\n      I'm a programmer, based in&nbsp;\n      <a href={LINKS.Rybinsk} target={BLANK} rel={REL}>\n        Rybinsk\n      </a>\n      ,&nbsp;Russia. There are some facts about me on this site.\n    </div>\n    <div className={CONTENT_BLOCK}>\n      You can contact me if you have some ideas for it's improvement or if you find some bugs, typos etc. I'm still\n      working on it.\n    </div>\n    <div className={CONTENT_BLOCK}>\n      Frontend of this site is based on React, Redux, TypeScript and Sass, the sources of this part are located on\n      GitHub&nbsp;\n      <a href={LINKS.Front} target={BLANK} rel={REL}>\n        here\n      </a>\n      .\n    </div>\n    <div className={CONTENT_BLOCK}>\n      Backend uses Spring Boot, Maven, Heroku and PostgreSQL and is located&nbsp;\n      <a href={LINKS.Back} target={BLANK} rel={REL}>\n        here\n      </a>\n      .\n    </div>\n  </div>\n);\n\n/**\n * Main page component\n */\nexport default () => <Container>{CONTENT}</Container>;\n","import React from 'react';\nimport bio from '../../resources/bio.json';\nimport Container from './Container';\nimport './About.scss';\n\n/**\n * About page component\n */\nexport default () => (\n  <Container title='Artyom Ganev'>\n    {bio.data.map((value: string, key: number) => (\n      <div key={key} className='page-bio__item'>\n        {value}\n      </div>\n    ))}\n  </Container>\n);\n","const DATE_FORMAT = { month: 'long', year: 'numeric' };\n\nexport default class DateUtil {\n\n  /**\n   * Create Date from date string.\n   * @param dateStr source string with %YYYY-MM-DD% format. Day is optional.\n   */\n  public static parseDateFromString(dateStr: string): Date | null {\n    if (!dateStr) {\n      return null;\n    }\n    const arr = dateStr.split('-');\n    const year = arr[0];\n    const month = arr[1];\n    const day = arr[2] || '1';\n    if (!year || !month) {\n      return null;\n    }\n    return new Date(parseInt(year, 10), parseInt(month, 10) - 1, parseInt(day, 10));\n  }\n\n  public static format(dateStr: string): string {\n    const date = DateUtil.parseDateFromString(dateStr);\n    return date\n      ? new Intl.DateTimeFormat('en-GB', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric',\n      }).format(date)\n      : '';\n  }\n\n  /**\n   * Career dates formatting\n   * @param {Date} start - Star date\n   * @param {Date} end - End date\n   * @param {DateTimeFormatOptions} format - dates format\n   */\n  public static prepareDates(start: Date, end: Date, format: Intl.DateTimeFormatOptions = DATE_FORMAT): string {\n    if (start) {\n      const startDate = new Date(start);\n      const string1 = startDate.toLocaleDateString('en-US', format);\n      if (end) {\n        const endDate = new Date(end);\n        return `${string1} - ${endDate.toLocaleDateString('en-US', format)}`;\n      }\n      return `Since ${string1}`;\n    }\n    return '';\n  }\n}","import React, { Component, ReactNode } from 'react';\nimport Source from '../../../model/Source';\nimport Container from '../Container';\n\nexport interface IProps<TData> {\n  items: TData[];\n}\n\n/**\n * Abstract page with data source\n */\nexport default abstract class Abstract<TData, TProps extends IProps<TData> = IProps<TData>> extends Component<TProps> {\n  public componentDidMount(): void {\n    const { items } = this.props;\n    if (!items.length) {\n      this.getSource().getList();\n    }\n  }\n\n  public render(): ReactNode {\n    const { items } = this.props;\n    return (\n      <Container>\n        <div className='flexBox flexColumn'>{this.getContent(items)}</div>\n      </Container>\n    );\n  }\n\n  protected abstract getSource(): Source<TData>;\n\n  protected abstract getContent(items: TData[]): ReactNode | ReactNode[];\n}\n","import axios, { AxiosResponse } from 'axios';\n\nconst API_URL = 'https://shielded-brushlands-46595.herokuapp.com';\nconst REQUEST_CONFIG = { headers: { 'x-requested-with': 'xhr' } };\n\n/**\n * Page source class\n * @abstract\n */\nexport default class Source<TPage = object> {\n  private readonly endpoint: string;\n  private readonly beforeLoad: () => void;\n  private readonly afterLoad: (data: TPage[]) => void;\n\n  constructor(endpoint: string, beforeLoad: () => void, afterLoad: (data: TPage[]) => void) {\n    this.endpoint = endpoint;\n    this.beforeLoad = beforeLoad;\n    this.afterLoad = afterLoad;\n  }\n\n  /**\n   * Get all records\n   */\n  public getList(): void {\n    this.beforeLoad();\n    axios.get<TPage[]>(`${API_URL}/${this.endpoint}/`, REQUEST_CONFIG)\n      .then(({ data }: AxiosResponse<TPage[]>) => {\n        this.afterLoad(data);\n      })\n      .catch(() => this.afterLoad([]));\n  }\n\n  /**\n   * Get single record\n   * @param {String} id to find record\n   */\n  public getById(id: string): void {\n    this.beforeLoad();\n    axios.get<TPage>(`${API_URL}/${this.endpoint}/${id}`, REQUEST_CONFIG)\n      .then(({ data }: AxiosResponse<TPage>) => {\n        this.afterLoad([data]);\n      })\n      .catch(() => this.afterLoad([]));\n  }\n\n}\n","import React, { ReactNode } from 'react';\nimport { BLANK, REL } from '../../constants/Html';\nimport { IBlog } from '../../interface/IBlog';\nimport DateUtil from '../../utils/Date';\nimport IState from '../../interface/IState';\nimport * as actions from '../../actions';\nimport { connect } from 'react-redux';\nimport Abstract, { IProps as IAbstractProps } from './Data/Abstract';\nimport './Blog.scss';\nimport Source from '../../model/Source';\n\nconst DATE_COMPARATOR = (item1: IBlog, item2: IBlog): number => {\n  // TODO: Migrate to normal Date format https://github.com/Artyom-Ganev/artyom-ganev-src/issues/83\n  const date1 = DateUtil.parseDateFromString(`${item1.year}-${item1.month}-${item1.day}`) || new Date();\n  const date2 = DateUtil.parseDateFromString(`${item2.year}-${item2.month}-${item2.day}`) || new Date();\n  return date1 < date2 ? 1 : -1;\n};\n\nconst mapStateToProps = ({ blog: { items } }: IState) => ({\n  items: Object.values(items),\n});\n\nconst actionCreators = {\n  appLoading: actions.appLoading,\n  blogLoadList: actions.blogLoadList,\n};\n\ninterface IProps<TData> extends IAbstractProps<TData> {\n  appLoading: (payload: { loading: boolean }) => void;\n  blogLoadList: (payload: { items: TData[] }) => void;\n}\n\n/**\n * Blog page\n */\nclass Blog extends Abstract<IBlog, IProps<IBlog>> {\n  private readonly source: Source<IBlog>;\n\n  constructor(props: IProps<IBlog>) {\n    super(props);\n    const { appLoading, blogLoadList } = props;\n    this.source = new Source<IBlog>(\n      'blog',\n      () => {\n        appLoading({ loading: true });\n      },\n      (data: IBlog[]) => {\n        blogLoadList({ items: data });\n      }\n    );\n  }\n\n  protected getSource = (): Source<IBlog> => this.source;\n\n  protected getContent = (blogList: IBlog[]): ReactNode[] =>\n    blogList.sort(DATE_COMPARATOR).map(({ id, year, month, day, title, link, linkCaption }: IBlog) => (\n      <div key={id} className='page-blog__itemContainer'>\n        <div className='page-blog__title'>{DateUtil.format(`${year}-${month}-${day}`)}</div>\n        <div className='page-blog__item'>{title}</div>\n        {link && (\n          <a href={link} target={BLANK} rel={REL} title='Click for details'>\n            {linkCaption}\n          </a>\n        )}\n      </div>\n    ));\n}\n\nexport default connect(mapStateToProps, actionCreators)(Blog);\n","import React, { ReactNode } from 'react';\nimport { BLANK, REL } from '../../constants/Html';\nimport { ICareer } from '../../interface/ICareer';\nimport { connect } from 'react-redux';\nimport IState from '../../interface/IState';\nimport * as actions from '../../actions';\nimport DateUtil from '../../utils/Date';\nimport Abstract, { IProps as IAbstractProps } from './Data/Abstract';\nimport './Career.scss';\nimport Source from '../../model/Source';\n\nconst mapStateToProps = ({ career: { items } }: IState) => {\n  return {\n    items: Object.values(items),\n  };\n};\n\nconst actionCreators = {\n  appLoading: actions.appLoading,\n  careerLoadList: actions.careerLoadList,\n};\n\ninterface IProps<TData> extends IAbstractProps<TData> {\n  appLoading: (payload: { loading: boolean }) => void;\n  careerLoadList: (payload: { items: TData[] }) => void;\n}\n\n/**\n * Career page\n */\nclass Career extends Abstract<ICareer, IProps<ICareer>> {\n  private readonly source: Source<ICareer>;\n\n  constructor(props: IProps<ICareer>) {\n    super(props);\n    const { appLoading, careerLoadList } = props;\n    this.source = new Source<ICareer>(\n      'career',\n      () => {\n        appLoading({ loading: true });\n      },\n      (data: ICareer[]) => {\n        careerLoadList({ items: data });\n      }\n    );\n  }\n\n  protected getSource = (): Source<ICareer> => this.source;\n\n  private prepareTitle = (site: string, title: string) => {\n    const header = <h3 className='page-career__title'>{title}</h3>;\n    return site ? (\n      <a href={site} target={BLANK} rel={REL} title='Click for details'>\n        {header}\n      </a>\n    ) : (\n      <h3>{title}</h3>\n    );\n  };\n\n  /**\n   * Career items markup\n   */\n  protected getContent = (careerList: ICareer[]): ReactNode => {\n    return careerList.map(({ id, site, title, startDate, endDate, post, description, tools }: ICareer) => (\n      <div key={id} className='page-career__item'>\n        {this.prepareTitle(site, title)}\n        <div className='page-career__dates'>{DateUtil.prepareDates(startDate, endDate)}</div>\n        <div className=''>Post:&nbsp;{post}</div>\n        <div className=''>{description}</div>\n        <div className='flexBox flexColumn'>\n          <div className=''>Tools:&nbsp;{tools}</div>\n        </div>\n      </div>\n    ));\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(Career);\n","import React from 'react';\nimport { BLANK, REL } from '../../constants/Html';\nimport contacts from '../../resources/contacts.json';\nimport Container from './Container';\nimport './Contacts.scss';\n\n/**\n * Contact options interface\n */\ninterface IContact {\n  key: string;\n  value: string;\n  link: string;\n  title: string;\n}\n\n/**\n * Contacts titles markup\n */\nconst titles = contacts.data.map(({ key, value }: IContact) => <div key={key}>{value}:&nbsp;</div>);\n\n/**\n * Contacts items markup\n */\nconst items = contacts.data.map(({ key, link, title }: IContact) => (\n  <div key={key}>\n    <a href={link} target={BLANK} rel={REL}>\n      {title}\n    </a>\n  </div>\n));\n\n/**\n * Contacts page component\n */\nexport default () => (\n  <Container>\n    <div className='flexBox alignItemsBaseline justifyContentBetween page-contacts__root'>\n      <div>{titles}</div>\n      <div className='page-contacts__item'>{items}</div>\n    </div>\n  </Container>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from './Container';\nimport './NotFound.scss';\n\nconst TITLE = 'Page Not Found';\n\n/**\n * 404 page not component\n */\nexport default () => (\n  <Container title={TITLE}>\n    <div className='page-notFound__item'>\n      <Link to='/'>Go to main page</Link>\n    </div>\n  </Container>\n);\n","import React, { Component } from 'react';\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport Menu from './Navigation/Menu';\nimport Main from './Page/Main';\nimport About from './Page/About';\nimport Blog from './Page/Blog';\nimport Career from './Page/Career';\nimport Contacts from './Page/Contacts';\nimport NotFound from './Page/NotFound';\nimport './App.scss';\nimport { connect } from 'react-redux';\nimport IState from '../interface/IState';\nimport * as actions from '../actions';\n\ninterface IProperties {\n  narrow: boolean;\n  appResize: (payload: { narrow: boolean }) => void;\n}\n\n/**\n * Check if the page is narrow\n */\nconst isNarrow = () => window.innerWidth <= 800;\n\nconst mapStateToProps = ({ app: { narrow } }: IState) => ({ narrow });\n\nconst actionCreators = {\n  appResize: actions.appResize,\n};\n\n/**\n * Main application component\n */\nclass App extends Component<IProperties> {\n  public componentDidMount() {\n    // init size state\n    this.onResize();\n    window.addEventListener('resize', this.onResize);\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  render = () => (\n    <HashRouter>\n      <div className='flexBox flexColumn'>\n        <Menu />\n        <div className='components-app__background' />\n        <div className='flexBox flexColumn components-app__content'>\n          <Switch>\n            <Redirect from='/main' to='/' />\n            <Route exact={true} path='/' component={Main} />\n            <Route exact={true} path='/about' component={About} />\n            <Route exact={true} path='/blog' component={Blog} />\n            <Route exact={true} path='/career' component={Career} />\n\n            <Route exact={true} path='/contacts' component={Contacts} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n        <div className='components-app__rights'>© 2019 All rights reserved</div>\n      </div>\n    </HashRouter>\n  );\n\n  private onResize = () => this.props.appResize({ narrow: isNarrow() });\n}\n\nexport default connect(mapStateToProps, actionCreators)(App);\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { handleActions } from 'redux-actions';\nimport { combineReducers } from 'redux';\nimport * as actions from '../actions';\nimport { ICareer, ICareerProps } from '../interface/ICareer';\nimport { IBlog, IBlogProps } from '../interface/IBlog';\nimport { IAppState } from '../interface/IState';\n\n// fix redux-actions TypeScript bad support\nconst appLoading = `${actions.appLoading}`;\nconst appResize = `${actions.appResize}`;\nconst blogLoadList = `${actions.blogLoadList}`;\nconst careerLoadList = `${actions.careerLoadList}`;\n\n/**\n * App state reducer\n */\nexport const app = handleActions<IAppState>({\n  [appLoading](state: IAppState, { payload: { loading } }: { payload: { loading: boolean } }) {\n    return { ...state, loading };\n  },\n  [appResize](state: IAppState, { payload: { narrow } }: { payload: { narrow: boolean } }) {\n    return { ...state, narrow };\n  },\n  [blogLoadList](state: IAppState) {\n    return { ...state, loading: false };\n  },\n  [careerLoadList](state: IAppState) {\n    return { ...state, loading: false };\n  },\n}, { narrow: false, loading: false });\n\n/**\n * Blog actions reducer\n */\nexport const blog = handleActions({\n  [blogLoadList](state: IBlogProps, { payload: { items } }: { payload: { items: IBlog[] } }) {\n    const newItems = state.items;\n    items.forEach((item) => {\n      newItems[item.id] = item;\n    });\n    return { ...state, items: newItems };\n  },\n}, { items: {}, detail: {} });\n\n/**\n * Career actions reducer\n */\nexport const career = handleActions({\n  [careerLoadList](state: ICareerProps, { payload: { items } }: { payload: { items: ICareer[] } }) {\n    const newItems = state.items;\n    items.forEach((item) => {\n      newItems[item.id] = item;\n    });\n    return { ...state, items: newItems };\n  },\n}, { items: {}, detail: {} });\n\n\nexport default combineReducers({ app, blog, career });","import reducers from '../reducers';\nimport { createStore } from 'redux';\n\nexport default createStore(reducers);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport store from './store';\nimport './index.scss';\n\n/**\n * Site root component\n */\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}