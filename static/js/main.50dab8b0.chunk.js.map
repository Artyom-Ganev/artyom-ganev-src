{"version":3,"sources":["components/Page/Main.module.scss","components/Page/Container.module.scss","components/Page/Blog.module.scss","components/Navigation/Menu.module.scss","components/Page/Career.module.scss","components/Page/Contacts.module.scss","components/Page/Main/GitHub.module.scss","components/Layout/Content.module.scss","components/Page/About.module.scss","components/Navigation/LoadingIndicator.module.scss","resources/artyom.jpg","components/Page/NotFound.module.scss","components/Layout/Footer.module.scss","actions/index.ts","components/Navigation/LoadingIndicator.tsx","components/Page/Container.tsx","components/Page/About.tsx","constants/Html.ts","model/Source.ts","utils/Date.ts","components/Page/Data/Abstract.tsx","components/Page/Blog.tsx","components/Page/Career.tsx","components/Page/Contacts.tsx","components/Page/Main/GitHub.tsx","components/Page/Main.tsx","components/Page/NotFound.tsx","components/Navigation/Routes.tsx","components/Layout/Content.tsx","components/Layout/Footer.tsx","constants/Pages.ts","components/Navigation/Menu.tsx","components/Layout/Header.tsx","components/App.tsx","registerServiceWorker.ts","reducers/index.ts","store/index.ts","index.tsx"],"names":["module","exports","appLoading","createAction","blogLoadList","careerLoadList","LoadingIndicator","className","styles","container","actionCreators","actions","connect","loading","app","props","children","title","narrow","useContext","NarrowContext","contentClass","wide","About","bio","data","map","value","key","item","BLANK","REL","API_URL","REQUEST_CONFIG","headers","create","end","before","after","endpoint","this","beforeLoad","afterLoad","build","loadList","axios","get","then","catch","loadById","id","DATE_FORMAT","month","year","DateUtil","dateStr","arr","split","day","Date","parseInt","date","parseDateFromString","Intl","DateTimeFormat","format","start","startDate","string1","toLocaleDateString","endDate","Abstract","items","length","getSource","getContent","Component","DATE_COMPARATOR","item1","item2","itemsSelector","createSelector","blog","Object","values","Blog","source","blogList","sort","link","linkCaption","itemContainer","href","target","rel","state","career","Career","prepareTitle","site","header","careerList","post","description","tools","dates","prepareDates","titles","contacts","Contacts","svgRef","React","createRef","contributionEffectWrapper","contribution","setContribution","update","needUpdate","GitHub","useState","useEffect","wrapper","document","createElement","innerHTML","svg","querySelector","current","outerHTML","extractSvg","ref","contributions","LINKS","CONTENT","image","src","img","alt","contentBlock","Main","NotFound","to","Routes","from","exact","path","component","Content","background","Footer","PAGES","name","url","Menu","activeClassName","active","Header","isNarrow","window","innerWidth","useResize","setNarrow","onResize","addEventListener","removeEventListener","createContext","App","Provider","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","handleActions","payload","newItems","forEach","detail","combineReducers","createStore","reducers","ReactDOM","render","store","getElementById","URL","process","toString","origin","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.50dab8b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentBlock\":\"Main_contentBlock__vrIRx\",\"image\":\"Main_image__3TWge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3v9xc\",\"wide\":\"Container_wide__3o9gn\",\"narrow\":\"Container_narrow__3LRXI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContainer\":\"Blog_itemContainer__1Dr7X\",\"title\":\"Blog_title__3Pemh\",\"item\":\"Blog_item__2gNU9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Menu_container__2LEBm\",\"item\":\"Menu_item__2Bzvu\",\"active\":\"Menu_active__1jdPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Career_item__1KmzK\",\"detail\":\"Career_detail__2-FuF\",\"dates\":\"Career_dates__37hCE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__MHsPx\",\"item\":\"Contacts_item__Id-dD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GitHub_container__2TV1z\",\"contributions\":\"GitHub_contributions__3oKS_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Content_background__Tyx3y\",\"container\":\"Content_container__CGP1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"About_item__WTGd7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoadingIndicator_container__16UZJ\"};","module.exports = __webpack_public_path__ + \"static/media/artyom.bbb441b2.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NotFound_container__mtkRW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__2RXZy\"};","import { createAction } from 'redux-actions';\n\n/**\n * App loading state change action\n */\nexport const appLoading = createAction('APP_LOADING');\n\n/**\n * Load Blog data action\n */\nexport const blogLoadList = createAction('BLOG_LOAD_LIST');\n\n/**\n * Load Career data action\n */\nexport const careerLoadList = createAction('CAREER_LOAD_LIST');\n","import React from 'react';\nimport styles from './LoadingIndicator.module.scss';\n\n/**\n * Simple loading indicator based on SVG-image\n */\nconst LoadingIndicator = () => (\n  <div className='flexBox flexGrow-1 flexShrink-1 justifyContentCenter'>\n    <div className={styles.container} />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import React, { ReactNode, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport IState from '../../interface/IState';\nimport { NarrowContext } from '../App';\nimport LoadingIndicator from '../Navigation/LoadingIndicator';\nimport styles from './Container.module.scss';\n\n/**\n * Container properties interface\n */\ninterface IProperties {\n  title?: string;\n  children?: ReactNode | ReactNode[];\n  loading?: boolean;\n}\n\nconst mapStateToProps = ({ app: { loading } }: IState) => ({ loading });\n\nconst actionCreators = {\n  appLoading: actions.appLoading,\n};\n\n/**\n * Page container with title\n */\nconst Container = (props: IProperties) => {\n  const { children, loading, title } = props;\n  const narrow = useContext(NarrowContext);\n  const contentClass = `flexBox flexColumn ${styles.container} ${narrow ? styles.narrow : styles.wide}`;\n  return loading ? (\n    <div className={contentClass}>\n      <LoadingIndicator />\n    </div>\n  ) : (\n    <div className={contentClass}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, actionCreators)(Container);\n","import React from 'react';\nimport bio from '../../resources/bio.json';\nimport styles from './About.module.scss';\nimport Container from './Container';\n\n/**\n * About page component\n */\nconst About = () => (\n  <Container title='Artyom Ganev'>\n    {bio.data.map((value: string, key: number) => (\n      <div key={key} className={styles.item}>\n        {value}\n      </div>\n    ))}\n  </Container>\n);\n\nexport default About;\n","export const BLANK = '_blank';\n\nexport const REL = 'noopener noreferrer';","import axios, { AxiosResponse } from 'axios';\n\nconst API_URL = 'https://shielded-brushlands-46595.herokuapp.com';\nconst REQUEST_CONFIG = { headers: { 'x-requested-with': 'xhr' } };\n\n/**\n * Data source implementation\n */\nconst Source = <TPage>(endpoint: string, beforeLoad: () => void, afterLoad: (data: TPage[]) => void) => {\n  return {\n    /**\n     * Load all data items\n     */\n    loadList(): void {\n      beforeLoad();\n      axios\n        .get<TPage[]>(`${API_URL}/${endpoint}/`, REQUEST_CONFIG)\n        .then(({ data }: AxiosResponse<TPage[]>) => {\n          afterLoad(data);\n        })\n        .catch(() => afterLoad([]));\n    },\n\n    /**\n     * Load single data item\n     * @param {String} id of the item\n     */\n    loadById(id: string): void {\n      beforeLoad();\n      axios\n        .get<TPage>(`${API_URL}/${endpoint}/${id}`, REQUEST_CONFIG)\n        .then(({ data }: AxiosResponse<TPage>) => {\n          afterLoad([data]);\n        })\n        .catch(() => afterLoad([]));\n    },\n  };\n};\n\n/**\n * Data source builder\n */\nconst create = <TPage>() => {\n  let end: string;\n  let before: () => void;\n  let after: (data: TPage[]) => void;\n  return {\n    endpoint(value: string) {\n      end = value;\n      return this;\n    },\n    beforeLoad(value: () => void) {\n      before = value;\n      return this;\n    },\n    afterLoad(value: (data: TPage[]) => void) {\n      after = value;\n      return this;\n    },\n    build: () => Source<TPage>(end, before, after),\n  };\n};\n\nexport default create;\n","const DATE_FORMAT = { month: 'long', year: 'numeric' };\n\nexport default class DateUtil {\n\n  /**\n   * Create Date from date string.\n   * @param dateStr source string with %YYYY-MM-DD% format. Day is optional.\n   */\n  public static parseDateFromString(dateStr: string): Date | null {\n    if (!dateStr) {\n      return null;\n    }\n    const arr = dateStr.split('-');\n    const year = arr[0];\n    const month = arr[1];\n    const day = arr[2] || '1';\n    if (!year || !month) {\n      return null;\n    }\n    return new Date(parseInt(year, 10), parseInt(month, 10) - 1, parseInt(day, 10));\n  }\n\n  public static format(dateStr: string): string {\n    const date = DateUtil.parseDateFromString(dateStr);\n    return date\n      ? new Intl.DateTimeFormat('en-GB', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric',\n      }).format(date)\n      : '';\n  }\n\n  /**\n   * Career dates formatting\n   * @param {Date} start - Star date\n   * @param {Date} end - End date\n   * @param {DateTimeFormatOptions} format - dates format\n   */\n  public static prepareDates(start: Date, end: Date, format: Intl.DateTimeFormatOptions = DATE_FORMAT): string {\n    if (start) {\n      const startDate = new Date(start);\n      const string1 = startDate.toLocaleDateString('en-US', format);\n      if (end) {\n        const endDate = new Date(end);\n        return `${string1} - ${endDate.toLocaleDateString('en-US', format)}`;\n      }\n      return `Since ${string1}`;\n    }\n    return '';\n  }\n}","import React, { Component, ReactNode } from 'react';\nimport { ISource } from '../../../interface/ISource';\nimport Container from '../Container';\n\nexport interface IProps<TData> {\n  items: TData[];\n}\n\n/**\n * Abstract page with data source\n */\nexport default abstract class Abstract<TData, TProps extends IProps<TData> = IProps<TData>> extends Component<TProps> {\n  public componentDidMount(): void {\n    const { items } = this.props;\n    if (!items.length) {\n      this.getSource().loadList();\n    }\n  }\n\n  public render(): ReactNode {\n    const { items } = this.props;\n    return <Container>{this.getContent(items)}</Container>;\n  }\n\n  protected abstract getSource(): ISource;\n\n  protected abstract getContent(items: TData[]): ReactNode | ReactNode[];\n}\n","import React, { ReactNode } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport * as actions from '../../actions';\nimport { BLANK, REL } from '../../constants/Html';\nimport { IBlog, IBlogItems } from '../../interface/IBlog';\nimport { ISource } from '../../interface/ISource';\nimport IState from '../../interface/IState';\nimport create from '../../model/Source';\nimport DateUtil from '../../utils/Date';\nimport styles from './Blog.module.scss';\nimport Abstract, { IProps as IAbstractProps } from './Data/Abstract';\n\nconst DATE_COMPARATOR = (item1: IBlog, item2: IBlog): number => {\n  // TODO: Migrate to normal Date format https://github.com/Artyom-Ganev/artyom-ganev-src/issues/83\n  const date1 = DateUtil.parseDateFromString(`${item1.year}-${item1.month}-${item1.day}`) || new Date();\n  const date2 = DateUtil.parseDateFromString(`${item2.year}-${item2.month}-${item2.day}`) || new Date();\n  return date1 < date2 ? 1 : -1;\n};\n\nconst itemsSelector = createSelector(\n  ({ blog }: IState) => blog,\n  (blog: { items: IBlogItems }) => Object.values(blog.items),\n);\n\nconst mapStateToProps = (state: IState) => ({ items: itemsSelector(state) });\n\nconst actionCreators = {\n  appLoading: actions.appLoading,\n  blogLoadList: actions.blogLoadList,\n};\n\ninterface IProps<TData> extends IAbstractProps<TData> {\n  appLoading: (payload: { loading: boolean }) => void;\n  blogLoadList: (payload: { items: TData[] }) => void;\n}\n\n/**\n * Blog page\n */\nclass Blog extends Abstract<IBlog, IProps<IBlog>> {\n  private readonly source: ISource;\n\n  constructor(props: IProps<IBlog>) {\n    super(props);\n    const { appLoading, blogLoadList } = props;\n    this.source = create<IBlog>()\n      .endpoint('blog')\n      .beforeLoad(() => {\n        appLoading({ loading: true });\n      })\n      .afterLoad((data: IBlog[]) => {\n        blogLoadList({ items: data });\n      })\n      .build();\n  }\n\n  protected getSource = (): ISource => this.source;\n\n  protected getContent = (blogList: IBlog[]): ReactNode[] =>\n    blogList.sort(DATE_COMPARATOR).map(({ id, year, month, day, title, link, linkCaption }: IBlog) => (\n      <div key={id} className={styles.itemContainer}>\n        <div className={styles.title}>{DateUtil.format(`${year}-${month}-${day}`)}</div>\n        <div className={styles.item}>{title}</div>\n        {link && (\n          <a href={link} target={BLANK} rel={REL} title='Click for details'>\n            {linkCaption}\n          </a>\n        )}\n      </div>\n    ));\n}\n\nexport default connect(mapStateToProps, actionCreators)(Blog);\n","import React, { ReactNode } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport * as actions from '../../actions';\nimport { BLANK, REL } from '../../constants/Html';\nimport { ICareer, ICareerItems } from '../../interface/ICareer';\nimport { ISource } from '../../interface/ISource';\nimport IState from '../../interface/IState';\nimport create from '../../model/Source';\nimport DateUtil from '../../utils/Date';\nimport styles from './Career.module.scss';\nimport Abstract, { IProps as IAbstractProps } from './Data/Abstract';\n\nconst itemsSelector = createSelector(\n  ({ career }: IState) => career,\n  (career: { items: ICareerItems }) => Object.values(career.items),\n);\n\nconst mapStateToProps = (state: IState) => ({ items: itemsSelector(state) });\n\nconst actionCreators = {\n  appLoading: actions.appLoading,\n  careerLoadList: actions.careerLoadList,\n};\n\ninterface IProps<TData> extends IAbstractProps<TData> {\n  appLoading: (payload: { loading: boolean }) => void;\n  careerLoadList: (payload: { items: TData[] }) => void;\n}\n\n/**\n * Career page\n */\nclass Career extends Abstract<ICareer, IProps<ICareer>> {\n  private readonly source: ISource;\n\n  constructor(props: IProps<ICareer>) {\n    super(props);\n    const { appLoading, careerLoadList } = props;\n    this.source = create<ICareer>()\n      .endpoint('career')\n      .beforeLoad(() => {\n        appLoading({ loading: true });\n      })\n      .afterLoad((data: ICareer[]) => {\n        careerLoadList({ items: data });\n      })\n      .build();\n  }\n\n  protected getSource = (): ISource => this.source;\n\n  private prepareTitle = (site: string, title: string) => {\n    const header = <h3>{title}</h3>;\n    return site ? (\n      <a href={site} target={BLANK} rel={REL} title='Click for details'>\n        {header}\n      </a>\n    ) : (\n      <h3>{title}</h3>\n    );\n  };\n\n  /**\n   * Career items markup\n   */\n  protected getContent = (careerList: ICareer[]): ReactNode => {\n    return careerList.map(({ id, site, title, startDate, endDate, post, description, tools }: ICareer) => (\n      <div key={id} className={styles.item}>\n        {this.prepareTitle(site, title)}\n        <div className={styles.dates}>{DateUtil.prepareDates(startDate, endDate)}</div>\n        <div>Post:&nbsp;{post}</div>\n        <div>{description}</div>\n        <div className='flexBox flexColumn'>\n          <div>Tools:&nbsp;{tools}</div>\n        </div>\n      </div>\n    ));\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(Career);\n","import React from 'react';\nimport { BLANK, REL } from '../../constants/Html';\nimport contacts from '../../resources/contacts.json';\nimport styles from './Contacts.module.scss';\nimport Container from './Container';\n\n/**\n * Contact options interface\n */\ninterface IContact {\n  key: string;\n  value: string;\n  link: string;\n  title: string;\n}\n\n/**\n * Contacts titles markup\n */\nconst titles = contacts.data.map(({ key, value }: IContact) => <div key={key}>{value}:&nbsp;</div>);\n\n/**\n * Contacts items markup\n */\nconst items = contacts.data.map(({ key, link, title }: IContact) => (\n  <div key={key}>\n    <a href={link} target={BLANK} rel={REL}>\n      {title}\n    </a>\n  </div>\n));\n\n/**\n * Contacts page component\n */\nconst Contacts = () => (\n  <Container>\n    <div className={`flexBox alignItemsBaseline justifyContentBetween ${styles.container}`}>\n      <div>{titles}</div>\n      <div className={styles.item}>{items}</div>\n    </div>\n  </Container>\n);\n\nexport default Contacts;\n","import axios, { AxiosResponse } from 'axios';\nimport React, { Dispatch, SetStateAction, useEffect, useState } from 'react';\nimport LoadingIndicator from '../../Navigation/LoadingIndicator';\nimport styles from './GitHub.module.scss';\n\nconst PROXY = 'https://urlreq.appspot.com/req?method=GET&url=';\nconst CONTR = 'https://github.com/users/Artyom-Ganev/contributions';\nconst svgRef = React.createRef<HTMLDivElement>();\n\n/**\n * Load GitHub contribution request\n * @param {Function} update function\n */\nconst loadData = (update: (data: string) => void) => {\n  axios\n    .get(`${PROXY}${CONTR}`)\n    .then(({ data }: AxiosResponse<string>) => {\n      update(data);\n    })\n    .catch(() => {\n      update('');\n    });\n};\n\n/**\n * Load GitHub contribution data hook\n */\nconst contributionEffectWrapper = (contribution: string, setContribution: Dispatch<SetStateAction<string>>) => {\n  if (contribution) {\n    return;\n  }\n\n  let needUpdate = true;\n  const updater = (data: string) => {\n    if (needUpdate) {\n      setContribution(data);\n    }\n  };\n  loadData(updater);\n\n  return () => {\n    // useEffect was cancelled\n    needUpdate = false;\n  };\n};\n\n/**\n * Extract Svg Element from contribution data\n * @param {String} contribution data\n * @return {HTMLDivElement} Svg Element\n */\nconst extractSvg = (contribution: string) => {\n  const wrapper = document.createElement('div');\n  wrapper.innerHTML = contribution;\n  const svg = wrapper.querySelector<HTMLDivElement>('svg.js-calendar-graph-svg');\n  if (svgRef.current) {\n    svgRef.current.innerHTML = svg ? svg.outerHTML : '';\n  }\n};\n\n/**\n * Github contributions chart component\n */\nconst GitHub = () => {\n  const [contribution, setContribution] = useState<string>('');\n  useEffect(() => contributionEffectWrapper(contribution, setContribution), [contribution]);\n  useEffect(() => extractSvg(contribution), [contribution]);\n  return (\n    <div className={`flexBox justifyContentCenter ${styles.container}`}>\n      <div ref={svgRef} className={styles.contributions} />\n      {!svgRef.current && <LoadingIndicator />}\n    </div>\n  );\n};\n\nexport default GitHub;\n","import React, { useContext } from 'react';\nimport { BLANK, REL } from '../../constants/Html';\nimport img from '../../resources/artyom.jpg';\nimport { NarrowContext } from '../App';\nimport Container from './Container';\nimport styles from './Main.module.scss';\nimport GitHub from './Main/GitHub';\n\nconst LINKS = {\n  Back: 'https://github.com/Artyom-Ganev/artyom-ganev-server',\n  Front: 'https://github.com/Artyom-Ganev/artyom-ganev-site',\n  Rybinsk: 'https://en.wikipedia.org/wiki/Rybinsk',\n};\n\nconst CONTENT = (\n  <div>\n    <img className={styles.image} src={img} alt='Artyom' title='artyom.jpg' />\n    <h2 className={styles.contentBlock}>Hi! My name is Artyom.</h2>\n    <div className={styles.contentBlock}>\n      I'm a programmer, based in&nbsp;\n      <a href={LINKS.Rybinsk} target={BLANK} rel={REL}>\n        Rybinsk\n      </a>\n      ,&nbsp;Russia. There are some facts about me on this site.\n    </div>\n    <div className={styles.contentBlock}>\n      You can contact me if you have some ideas for it's improvement or if you find some bugs, typos etc. I'm still\n      working on it.\n    </div>\n    <div className={styles.contentBlock}>\n      Frontend of this site is based on React, Redux, TypeScript and Sass, the sources of this part are located on\n      GitHub&nbsp;\n      <a href={LINKS.Front} target={BLANK} rel={REL}>\n        here\n      </a>\n      .\n    </div>\n    <div className={styles.contentBlock}>\n      Backend uses Spring Boot, Maven, Heroku and PostgreSQL and is located&nbsp;\n      <a href={LINKS.Back} target={BLANK} rel={REL}>\n        here\n      </a>\n      .\n    </div>\n  </div>\n);\n\n/**\n * Main page component\n */\nconst Main = () => {\n  const narrow = useContext(NarrowContext);\n  return (\n    <Container>\n      {CONTENT}\n      {!narrow && <GitHub />}\n    </Container>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from './Container';\nimport styles from './NotFound.module.scss';\n\nconst TITLE = 'Page Not Found';\n\n/**\n * 404 page not component\n */\nconst NotFound = () => (\n  <Container title={TITLE}>\n    <div className={styles.container}>\n      <Link to='/'>Go to main page</Link>\n    </div>\n  </Container>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport About from '../Page/About';\nimport Blog from '../Page/Blog';\nimport Career from '../Page/Career';\nimport Contacts from '../Page/Contacts';\nimport Main from '../Page/Main';\nimport NotFound from '../Page/NotFound';\n\n/**\n * Application routes component\n */\nconst Routes = () => (\n  <Switch>\n    <Redirect from='/main' to='/' />\n    <Route exact={true} path='/' component={Main} />\n    <Route exact={true} path='/about' component={About} />\n    <Route exact={true} path='/blog' component={Blog} />\n    <Route exact={true} path='/career' component={Career} />\n    <Route exact={true} path='/contacts' component={Contacts} />\n    <Route component={NotFound} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport Routes from '../Navigation/Routes';\nimport styles from './Content.module.scss';\n\n/**\n * App Content component\n */\nconst Content = () => (\n  <>\n    <div className={styles.background} />\n    <div className={`flexBox flexColumn ${styles.container}`}>\n      <Routes />\n    </div>\n  </>\n);\n\nexport default Content;\n","import React from 'react';\nimport styles from './Footer.module.scss';\n\n/**\n * Footer component\n */\nconst Footer = () => (\n  <footer className={styles.container}>\n    <span>© 2019 All rights reserved</span>\n  </footer>\n);\n\nexport default Footer;\n","export const ABOUT = { id: 'about', name: \"About\", url: \"about\" };\nexport const BLOG = { id: 'blog', name: \"Blog\", url: \"blog\" };\nexport const CAREER = { id: 'career', name: \"Career\", url: \"career\" };\nexport const CONTACTS = { id: 'contacts', name: \"Contacts\", url: \"contacts\" };\nexport const MAIN = { id: 'main', name: \"Main\", url: \"\" };\n\n/**\n * Pages settings\n */\nexport const PAGES = [MAIN, ABOUT, BLOG, CAREER, CONTACTS];","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { PAGES } from '../../constants/Pages';\nimport styles from './Menu.module.scss';\n\n/**\n * Menu items render function\n */\nconst renderItems = () =>\n  PAGES.map(({ id, name, url }) => (\n    <NavLink exact={!url} className={styles.item} activeClassName={styles.active} to={`/${url}`} key={id}>\n      {name}\n    </NavLink>\n  ));\n\n/**\n * /**\n * Navigation menu component\n */\nconst Menu = () => (\n  <nav className={`flexBox ${styles.container}`} id='menu'>\n    {renderItems()}\n  </nav>\n);\n\nexport default Menu;\n","import React from 'react';\nimport Menu from '../Navigation/Menu';\n\n/**\n * Header component\n */\nconst Header = () => (\n  <header className='flexBox'>\n    <Menu />\n  </header>\n);\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport Content from './Layout/Content';\nimport Footer from './Layout/Footer';\nimport Header from './Layout/Header';\n\n/**\n * Check if the page is narrow\n */\nconst isNarrow = () => window.innerWidth <= 800;\n\n/**\n * Resize hook\n */\nconst useResize = () => {\n  const [narrow, setNarrow] = useState<boolean>(isNarrow());\n  useEffect(() => {\n    const onResize = () => setNarrow(isNarrow());\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  });\n  return narrow;\n};\n\nexport const NarrowContext = React.createContext(isNarrow());\n\n/**\n * Main application component\n */\nconst App = () => (\n  <HashRouter>\n    <div className='flexBox flexColumn'>\n      <Header />\n      <NarrowContext.Provider value={useResize()}>\n        <Content />\n      </NarrowContext.Provider>\n      <Footer />\n    </div>\n  </HashRouter>\n);\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { handleActions } from 'redux-actions';\nimport { combineReducers } from 'redux';\nimport * as actions from '../actions';\nimport { ICareer, ICareerProps } from '../interface/ICareer';\nimport { IBlog, IBlogProps } from '../interface/IBlog';\nimport { IAppState } from '../interface/IState';\n\n// fix redux-actions TypeScript bad support\nconst appLoading = `${actions.appLoading}`;\nconst blogLoadList = `${actions.blogLoadList}`;\nconst careerLoadList = `${actions.careerLoadList}`;\n\n/**\n * App state reducer\n */\nexport const app = handleActions<IAppState>(\n  {\n    [appLoading](state: IAppState, { payload: { loading } }: { payload: { loading: boolean } }) {\n      return { ...state, loading };\n    },\n    [blogLoadList](state: IAppState) {\n      return { ...state, loading: false };\n    },\n    [careerLoadList](state: IAppState) {\n      return { ...state, loading: false };\n    },\n  },\n  { loading: false }\n);\n\n/**\n * Blog actions reducer\n */\nexport const blog = handleActions(\n  {\n    [blogLoadList](state: IBlogProps, { payload: { items } }: { payload: { items: IBlog[] } }) {\n      const newItems = state.items;\n      items.forEach((item) => {\n        newItems[item.id] = item;\n      });\n      return { ...state, items: newItems };\n    },\n  },\n  { items: {}, detail: {} }\n);\n\n/**\n * Career actions reducer\n */\nexport const career = handleActions(\n  {\n    [careerLoadList](state: ICareerProps, { payload: { items } }: { payload: { items: ICareer[] } }) {\n      const newItems = state.items;\n      items.forEach((item) => {\n        newItems[item.id] = item;\n      });\n      return { ...state, items: newItems };\n    },\n  },\n  { items: {}, detail: {} }\n);\n\nexport default combineReducers({ app, blog, career });\n","import reducers from '../reducers';\nimport { createStore } from 'redux';\n\nexport default createStore(reducers);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport store from './store';\nimport './index.scss';\n\n/**\n * Site root component\n */\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}