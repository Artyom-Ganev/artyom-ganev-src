{"version":3,"sources":["resources/artyom.jpg","constants/Pages.ts","components/Navigation/Menu.tsx","actions/index.ts","constants/ActionTypes.ts","constants/Html.ts","components/Page/Container.tsx","components/Page/Main.tsx","components/Page/About.tsx","utils/Date.ts","components/Utils/PagesCache.ts","components/Model/Source.ts","components/Navigation/LoadingIndicator.tsx","components/Page/AbstractPage.tsx","components/Page/Blog.tsx","components/Page/Career.tsx","components/Page/Contacts.tsx","components/Page/NotFound.tsx","components/App.tsx","registerServiceWorker.ts","reducers/index.ts","index.tsx"],"names":["module","exports","MAIN","id","name","url","PAGES","dispatch","activePage","className","clickHandler","map","to","key","onClick","renderItems","payload","type","clickWrapper","BLANK","REL","isNarrow","window","innerWidth","Container","state","narrow","onResize","setState","addEventListener","this","removeEventListener","props","contentClass","title","content","Component","LINKS","CONTENT_BLOCK","PAGE_CONTENT","src","img","alt","href","target","rel","items","bio","data","value","DateUtil","dateStr","arr","split","year","month","day","Date","parseInt","date","parseDateFromString","Intl","DateTimeFormat","format","PagesCache","cache","Map","instance","getTime","set","get","REQUEST_CONFIG","headers","CACHE","getInstance","Source","pageName","baseUrl","cachedData","Promise","resolve","axios","then","catch","AbstractPage","loaded","source","getPageName","getBaseUrl","getContent","getItems","getList","DATE_COMPARATOR","item1","item2","Blog","sort","link","linkCaption","DATE_FORMAT","prepareDates","start","end","string1","toLocaleDateString","endDate","prepareTitle","site","header","Career","startDate","post","description","tools","titles","contacts","connect","ownProps","navigation","location","pathname","exact","path","component","Main","About","Contacts","NotFound","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","store","createStore","combineReducers","ReactDOM","render","App","document","getElementById","URL","process","toString","origin","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e9ad55ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/artyom.bbb441b2.jpg\";","export const ABOUT = { id: 'about', name: \"About\", url: \"about\" };\nexport const BLOG = { id: 'blog', name: \"Blog\", url: \"blog\" };\nexport const CAREER = { id: 'career', name: \"Career\", url: \"career\" };\nexport const CONTACTS = { id: 'contacts', name: \"Contacts\", url: \"contacts\" };\nexport const MAIN = { id: 'main', name: \"Main\", url: \"\" };\n\n/**\n * Pages settings\n */\nexport const PAGES = [MAIN, ABOUT, BLOG, CAREER, CONTACTS];","import React, { MouseEventHandler } from \"react\";\nimport { DispatchProp } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Dispatch } from \"redux\";\nimport { navigate } from \"../../actions\";\nimport { MAIN, PAGES } from \"../../constants/Pages\";\nimport { INavigateAction } from \"../../interface/Actions\";\nimport \"./Menu.scss\";\n\nexport interface IProperties extends DispatchProp<INavigateAction> {\n  activePage: string;\n}\n\n/**\n * Menu item click wrapper function\n * Transfers menu item id and dispatching function to click handler\n * @param {Function} dispatch dispatching function\n */\nconst clickWrapper = (dispatch: Dispatch<INavigateAction>) => (\n  id: string\n) => () => dispatch(navigate(id));\n\n/**\n * Menu items render function\n * @param {String} activePage Active menu item id\n * @param {Function} clickHandler Menu item click handler\n */\nconst renderItems = (\n  activePage: string,\n  clickHandler: (id: string) => MouseEventHandler<HTMLAnchorElement>\n) =>\n  PAGES.map(({ id, name, url }) => (\n    <Link\n      className={`nav-menu__item${activePage === id ? \" active\" : \"\"}`}\n      to={`/${url}`}\n      key={id}\n      onClick={clickHandler(id)}\n    >\n      {name}\n    </Link>\n  ));\n\n/**\n * /**\n * Navigation menu component\n * @param {Function} dispatch dispatching function\n * @param {String} activePage Active menu item id\n */\nexport default ({ dispatch, activePage = MAIN.id }: IProperties) => (\n  <div className=\"flexBox nav-menu__root\" id=\"menu\">\n    {renderItems(activePage, clickWrapper(dispatch))}\n  </div>\n);\n","import { NAVIGATE } from \"../constants/ActionTypes\";\nimport { INavigateAction } from \"../interface/Actions\";\n\n/**\n * Navigate action\n * @param {String} activePage new active page id\n * @return INavigateAction\n */\nexport const navigate = (activePage: string): INavigateAction => ({ payload: { activePage }, type: NAVIGATE });\n","export const NAVIGATE = \"NAVIGATE\";","export const BLANK = '_blank';\n\nexport const REL = 'noopener noreferrer';","import React, { Component, ReactNode } from \"react\";\nimport \"./Container.scss\";\n\n/**\n * Container properties interface\n */\ninterface IProperties {\n  title?: string;\n  content: ReactNode;\n  className?: string;\n}\n\n/**\n * Check if the page is narrow\n */\nconst isNarrow = () => window.innerWidth <= 800;\n\n/**\n * Page container with title\n */\nexport default class Container extends Component<IProperties> {\n  public state: { narrow: boolean } = { narrow: isNarrow() };\n\n  public componentDidMount() {\n    window.addEventListener(\"resize\", this.onResize);\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.onResize);\n  }\n\n  public render() {\n    let className = this.props.className;\n    className = className ? ` ${className} ` : \" \";\n    const contentClass = `flexBox flexColumn${className}page-container__root${\n      this.state.narrow ? \"--narrow\" : \"\"\n    }`;\n    const { title, content } = this.props;\n    return (\n      <div className={contentClass}>\n        {title && <h2>{title}</h2>}\n        <div>{content}</div>\n      </div>\n    );\n  }\n\n  private onResize = () => {\n    const narrow = isNarrow();\n    if (this.state.narrow !== narrow) {\n      this.setState({ narrow });\n    }\n  };\n}\n","import React from \"react\";\nimport { BLANK, REL } from \"../../constants/Html\";\nimport img from \"../../resources/artyom.jpg\";\nimport Container from \"./Container\";\nimport \"./Main.scss\";\n\nconst LINKS = {\n  Back: \"https://github.com/Artyom-Ganev/artyom-ganev-server\",\n  Front: \"https://github.com/Artyom-Ganev/artyom-ganev-site\",\n  Rybinsk: \"https://en.wikipedia.org/wiki/Rybinsk\"\n};\n\nconst CONTENT_BLOCK = \"page-main__contentBlock\";\n\n/**\n * Main page component\n */\nconst PAGE_CONTENT = (\n  <div className=\"page-main__root\">\n    <img\n      className=\"page-main__image\"\n      src={img}\n      alt=\"Artyom\"\n      title=\"artyom.jpg\"\n    />\n    <h2 className={CONTENT_BLOCK}>Hi! My name is Artyom.</h2>\n    <div className={CONTENT_BLOCK}>\n      I'm a programmer, based in&nbsp;\n      <a href={LINKS.Rybinsk} target={BLANK} rel={REL}>\n        Rybinsk\n      </a>\n      ,&nbsp;Russia. There are some facts about me on this site.\n    </div>\n    <div className={CONTENT_BLOCK}>\n      You can contact me if you have some ideas for it's improvement or if you\n      find some bugs, typos etc. I'm still working on it.\n    </div>\n    <div className={CONTENT_BLOCK}>\n      Frontend of this site is based on React, Redux, TypeScript and Sass, the\n      sources of this part are located on GitHub&nbsp;\n      <a href={LINKS.Front} target={BLANK} rel={REL}>\n        here\n      </a>\n      .\n    </div>\n    <div className={CONTENT_BLOCK}>\n      Backend uses Spring Boot, Maven, Heroku and PostgreSQL and is\n      located&nbsp;\n      <a href={LINKS.Back} target={BLANK} rel={REL}>\n        here\n      </a>\n      .\n    </div>\n  </div>\n);\n\nexport default () => <Container content={PAGE_CONTENT} />;\n","import React from \"react\";\nimport bio from \"../../resources/bio.json\";\nimport Container from \"./Container\";\nimport \"./About.scss\";\n\nconst items = bio.data.map((value: string, key: number) => (\n  <div key={key} className=\"page-bio__item\">\n    {value}\n  </div>\n));\n\n/**\n * About page component\n */\nexport default () => <Container title=\"Artyom Ganev\" content={items} />;\n","/**\n * Date utilities\n */\nexport default class DateUtil {\n\n    /**\n     * Create Date from date string.\n     * @param dateStr source string with %YYYY-MM-DD% format. Day is optional.\n     */\n    public static parseDateFromString(dateStr: string): Date | null {\n        if (!dateStr) {\n            return null;\n        }\n        const arr = dateStr.split('-');\n        const year = arr[0];\n        const month = arr[1];\n        const day = arr[2] || '1';\n        if (!year || !month) {\n            return null;\n        }\n        return new Date(parseInt(year, 10), parseInt(month, 10) - 1, parseInt(day, 10));\n    }\n\n    public static format(dateStr: string): string {\n        const date = DateUtil.parseDateFromString(dateStr);\n        return date\n            ? new Intl.DateTimeFormat('en-GB', {\n                day: '2-digit',\n                month: 'long',\n                year: 'numeric'\n            }).format(date)\n            : '';\n    }\n}","interface IValue {\n    value: unknown;\n    date: number;\n}\n\n/**\n * Simple memory cache for site pages\n * @singleton\n */\nexport default class PagesCache {\n\n    /**\n     * Get cache instance\n     */\n    public static getInstance(): PagesCache {\n        if (!PagesCache.instance) {\n            PagesCache.instance = new PagesCache();\n        }\n\n        return PagesCache.instance;\n    }\n\n    private static instance: PagesCache;\n    private cache: Map<string, IValue>;\n\n    private constructor() {\n        this.cache = new Map<string, IValue>();\n    }\n\n    /**\n     * Save value to cache\n     * @param key\n     * @param value to set\n     */\n    public set<T>(key: string, value: T): void {\n        const date = new Date().getTime();\n        this.cache.set(key, { value, date });\n    }\n\n    /**\n     * Get value from cache\n     * @param key\n     */\n    public get<T>(key: string): T {\n        return this.cache.get(key)?.value as T;\n    }\n}\n","import axios, { AxiosResponse } from 'axios';\nimport PagesCache from '../Utils/PagesCache';\n\nconst REQUEST_CONFIG = { headers: { 'x-requested-with': 'xhr' } };\nconst CACHE = PagesCache.getInstance();\n\n/**\n * Page source class\n * @abstract\n */\nexport default class Source<TPage = object> {\n   private readonly pageName: string;\n   private readonly baseUrl: string;\n\n   constructor(pageName: string, baseUrl: string) {\n      this.pageName = pageName;\n      this.baseUrl = baseUrl;\n   }\n\n   /**\n    * Get all records\n    */\n   public getList(): Promise<TPage[]> {\n      const cachedData = CACHE.get<TPage[]>(this.pageName);\n      if (cachedData) {\n         return Promise.resolve(cachedData);\n      }\n\n      return new Promise((resolve) => {\n         axios.get<TPage[]>(this.baseUrl, REQUEST_CONFIG)\n            .then(({ data }: AxiosResponse<TPage[]>) => {\n               CACHE.set<TPage[]>(this.pageName, data);\n               resolve(data);\n            })\n            .catch(() => resolve([]));\n      });\n   }\n\n   /**\n    * Get single record\n    * @param {String} id to find record\n    */\n   public getById(id: string): Promise<TPage> {\n      return new Promise((resolve) => {\n         axios.get<TPage>(`${this.baseUrl}/${id}`, REQUEST_CONFIG)\n            .then(({ data }: AxiosResponse<TPage>) => {\n               resolve(data);\n            })\n            .catch(() => resolve());\n      });\n   }\n}\n","import React from \"react\";\nimport \"./LoadingIndicator.scss\";\n\n/**\n * Simple loading indicator based on SVG-image\n */\nexport default () => (\n  <div className=\"flexBox flexGrow-1 flexShrink-1 justifyContentCenter\">\n    <div className=\"nav-loading__indicator\" />\n  </div>\n);\n","import React, { Component, ReactNode } from \"react\";\nimport Source from \"../Model/Source\";\nimport LoadingIndicator from \"../Navigation/LoadingIndicator\";\nimport Container from \"./Container\";\n\nexport interface IState<TPage> {\n  items: TPage[];\n  loaded: boolean;\n}\n\n/**\n * Base component for all pages with source\n * @abstract\n */\nexport default abstract class AbstractPage<TPage> extends Component<\n  {},\n  IState<TPage>\n> {\n  public state: IState<TPage> = {\n    items: [],\n    loaded: false\n  };\n\n  private readonly source: Source<TPage> = new Source<TPage>(\n    this.getPageName(),\n    this.getBaseUrl()\n  );\n\n  public componentDidMount(): void {\n    this.source\n      .getList()\n      .then((items: TPage[]) => {\n        this.setState({ items, loaded: true });\n      })\n      .catch(() => {\n        this.setState({ items: [], loaded: true });\n      });\n  }\n\n  public render(): ReactNode {\n    const { loaded } = this.state;\n    const content = loaded ? this.getContent() : <LoadingIndicator />;\n    return <Container content={content} />;\n  }\n\n  /**\n   * Get page name\n   */\n  protected abstract getPageName(): string;\n\n  /**\n   * Get page backend url\n   */\n  protected abstract getBaseUrl(): string;\n\n  /**\n   * Get page items\n   */\n  protected abstract getItems(): ReactNode;\n\n  private getContent = () => (\n    <div className=\"flexBox flexColumn\">{this.getItems()}</div>\n  );\n}\n","import React, { ReactNode } from \"react\";\nimport { BLANK, REL } from \"../../constants/Html\";\nimport IBlog from \"../../interface/IBlog\";\nimport DateUtil from \"../../utils/Date\";\nimport AbstractPage from \"./AbstractPage\";\nimport \"./Blog.scss\";\n\nconst DATE_COMPARATOR = (item1: IBlog, item2: IBlog): number => {\n  // TODO: Migrate to normal Date format https://github.com/Artyom-Ganev/artyom-ganev-src/issues/83\n  const date1 =\n    DateUtil.parseDateFromString(`${item1.year}-${item1.month}-${item1.day}`) ||\n    new Date();\n  const date2 =\n    DateUtil.parseDateFromString(`${item2.year}-${item2.month}-${item2.day}`) ||\n    new Date();\n  return date1 < date2 ? 1 : -1;\n};\n\nconst PAGE_NAME = \"blog\";\nconst BASE_URL = `https://shielded-brushlands-46595.herokuapp.com/blog/`;\n\n/**\n * Blog page\n */\nexport default class Blog extends AbstractPage<IBlog> {\n  protected getBaseUrl(): string {\n    return BASE_URL;\n  }\n\n  protected getPageName(): string {\n    return PAGE_NAME;\n  }\n\n  /**\n   * Blog items markup\n   */\n  protected getItems = (): ReactNode =>\n    this.state.items\n      .sort(DATE_COMPARATOR)\n      .map(({ id, year, month, day, title, link, linkCaption }: IBlog) => (\n        <div key={id} className=\"page-blog__itemContainer\">\n          <div className=\"page-blog__title\">\n            {DateUtil.format(`${year}-${month}-${day}`)}\n          </div>\n          <div className=\"page-blog__item\">{title}</div>\n          <a href={link} target={BLANK} rel={REL}>\n            {linkCaption}\n          </a>\n        </div>\n      ));\n}\n","import React, { ReactNode } from \"react\";\nimport { BLANK, REL } from \"../../constants/Html\";\nimport ICareer from \"../../interface/ICareer\";\nimport AbstractPage from \"./AbstractPage\";\nimport \"./Career.scss\";\n\nconst DATE_FORMAT = {\n  month: \"long\",\n  year: \"numeric\"\n};\n\nconst PAGE_NAME = \"career\";\nconst BASE_URL = `https://shielded-brushlands-46595.herokuapp.com/career/`;\n\n/**\n * Career dates formatting\n * @param {Date} start - Star date\n * @param {Date} end - End date\n */\nconst prepareDates = (start: Date, end: Date): string => {\n  if (start) {\n    const startDate = new Date(start);\n    const string1 = startDate.toLocaleDateString(\"en-US\", DATE_FORMAT);\n    if (end) {\n      const endDate = new Date(end);\n      return `${string1} - ${endDate.toLocaleDateString(\"en-US\", DATE_FORMAT)}`;\n    }\n    return `Since ${string1}`;\n  }\n  return \"\";\n};\n\n/**\n * Prepare Career item title. Wraps company name with link if site exists.\n * @param site - company site\n * @param title - company name\n */\nconst prepareTitle = (site: string | undefined, title: string | undefined) => {\n  const header = <h3 className=\"page-career__title\">{title}</h3>;\n  return site ? (\n    <a href={site} target={BLANK} rel={REL}>\n      {header}\n    </a>\n  ) : (\n    title\n  );\n};\n\n/**\n * Career page\n */\nexport default class Career extends AbstractPage<ICareer> {\n  protected getBaseUrl(): string {\n    return BASE_URL;\n  }\n\n  protected getPageName(): string {\n    return PAGE_NAME;\n  }\n\n  /**\n   * Career items markup\n   */\n  // prettier-ignore\n  protected getItems = (): ReactNode => this.state.items.map(({ id, site, title, startDate, endDate, post, description, tools }: ICareer) => (\n    <div key={id} className=\"page-career__item\">\n      {prepareTitle(site, title)}\n      <div className=\"page-career__dates\">\n        {prepareDates(startDate, endDate)}\n      </div>\n      <div className=\"\">Post:&nbsp;{post}</div>\n      <div className=\"\">{description}</div>\n      <div className=\"flexBox flexColumn\">\n        <div className=\"\">Tools:&nbsp;{tools}</div>\n      </div>\n    </div>\n  ));\n}\n","import React from \"react\";\nimport { BLANK, REL } from \"../../constants/Html\";\nimport contacts from \"../../resources/contacts.json\";\nimport Container from \"./Container\";\nimport \"./Contacts.scss\";\n\n/**\n * Contact options interface\n */\ninterface IContact {\n  key: string;\n  value: string;\n  link: string;\n  title: string;\n}\n\n/**\n * Contacts titles markup\n */\nconst titles = contacts.data.map(({ key, value }: IContact) => (\n  <div key={key}>{value}:&nbsp;</div>\n));\n\n/**\n * Contacts items markup\n */\nconst items = contacts.data.map(({ key, link, title }: IContact) => (\n  <div key={key}>\n    <a href={link} target={BLANK} rel={REL}>\n      {title}\n    </a>\n  </div>\n));\n\n/**\n * Page content\n */\nconst content = (\n  <div className=\"flexBox alignItemsBaseline justifyContentBetween page-contacts__root\">\n    <div>{titles}</div>\n    <div className=\"page-contacts__item\">{items}</div>\n  </div>\n);\n\n/**\n * Contacts page component\n */\nexport default () => <Container content={content} />;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"./Container\";\nimport \"./NotFound.scss\";\n\nconst TEXT = \"Page Not Found\";\n\nconst content = (\n  <div className=\"page-notFound__item\">\n    <Link to=\"/\">Go to main page</Link>\n  </div>\n);\n\n/**\n * 404 page not component\n */\nexport default () => <Container title={TEXT} content={content} />;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Menu from \"./Navigation/Menu\";\nimport Main from \"./Page/Main\";\nimport About from \"./Page/About\";\nimport Blog from \"./Page/Blog\";\nimport Career from \"./Page/Career\";\nimport Contacts from \"./Page/Contacts\";\nimport NotFound from \"./Page/NotFound\";\nimport IState from \"../interface/IState\";\nimport { connect, DispatchProp } from \"react-redux\";\nimport { MAIN } from \"../constants/Pages\";\nimport \"./App.scss\";\n\nexport interface IProperties extends DispatchProp {\n  navigation: { activePage: string };\n}\n\n/**\n * Main application component\n */\nconst App = ({ dispatch, navigation }: IProperties) => (\n  <div className=\"flexBox flexColumn\">\n    <Menu dispatch={dispatch} activePage={navigation.activePage} />\n    <div className=\"components-app__background\" />\n    <div className=\"flexBox flexColumn components-app__content\">\n      <Switch>\n        <Route exact={true} path=\"\" component={Main} />\n        <Route path=\"about\" component={About} />\n        <Route path=\"blog\" component={Blog} />\n        <Route path=\"career\" component={Career} />\n        <Route path=\"contacts\" component={Contacts} />\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n    <div className=\"components-app__rights\">© 2019 All rights reserved</div>\n  </div>\n);\n\n/**\n * Component state to props mapping function\n * @param {IState} state\n * @param {Object} ownProps\n */\nconst mapStateToProps = (\n  { navigation }: IState,\n  ownProps: { location: { pathname: string } }\n) => {\n  const { activePage } = navigation;\n  if (activePage) {\n    return { navigation: { activePage } };\n  }\n  // We need to set default page on first login\n  const paths = ownProps.location.pathname.split(\"/\");\n  return { navigation: { activePage: paths[1] || MAIN.id } };\n};\n\nexport default connect(mapStateToProps)(App);\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { NAVIGATE } from \"../constants/ActionTypes\";\nimport { INavigateAction } from \"../interface/Actions\";\nimport { INavigationState } from \"../interface/IState\";\n\n/**\n * Navigation actions reducer\n * @param {INavigationState} state current state\n * @param {INavigateAction} action current action\n */\nexport const navigation = (state: INavigationState = { activePage: '' }, { payload, type }: INavigateAction): INavigationState => {\n  if (type === NAVIGATE) {\n    const { activePage } = payload;\n    return { activePage };\n  }\n  return state;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { combineReducers, createStore } from \"redux\";\nimport App from \"./components/App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { navigation } from \"./reducers\";\nimport \"./index.scss\";\n\nconst store = createStore(combineReducers({ navigation }));\n\n/**\n * Site root component\n */\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Route component={App} />\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\") as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}